{
  "version": 3,
  "sources": ["../../node_modules/@automerge/automerge/dist/mjs/wasm_bindgen_output/web/automerge_wasm.js", "../../node_modules/@automerge/automerge/dist/mjs/low_level.js", "../../node_modules/@automerge/automerge/dist/mjs/wasm_bindgen_output/bundler/automerge_wasm.js", "../../node_modules/@automerge/automerge/dist/mjs/wasm_bindgen_output/bundler/automerge_wasm_bg.js", "../../node_modules/@automerge/automerge/dist/mjs/implementation.js", "../../node_modules/@automerge/automerge/dist/mjs/constants.js", "../../node_modules/@automerge/automerge/dist/mjs/counter.js", "../../node_modules/@automerge/automerge/dist/mjs/immutable_string.js", "../../node_modules/@automerge/automerge/dist/mjs/proxies.js", "../../node_modules/@automerge/automerge/dist/mjs/numbers.js", "../../node_modules/@automerge/automerge/dist/mjs/internal_state.js", "../../node_modules/@automerge/automerge/dist/mjs/apply_patches.js", "../../node_modules/@automerge/automerge/dist/mjs/conflicts.js", "../../node_modules/@automerge/automerge/dist/mjs/entrypoints/fullfat_bundler.js"],
  "sourcesContent": ["let wasm;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nconst MAX_SAFARI_DECODE_BYTES = 2146435072;\nlet numBytesDecoded = 0;\nfunction decodeText(ptr, len) {\n    numBytesDecoded += len;\n    if (numBytesDecoded >= MAX_SAFARI_DECODE_BYTES) {\n        cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n        cachedTextDecoder.decode();\n        numBytesDecoded = len;\n    }\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return decodeText(ptr, len);\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = new TextEncoder();\n\nif (!('encodeInto' in cachedTextEncoder)) {\n    cachedTextEncoder.encodeInto = function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    }\n}\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = cachedTextEncoder.encodeInto(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_4.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches && builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction takeFromExternrefTable0(idx) {\n    const value = wasm.__wbindgen_export_4.get(idx);\n    wasm.__externref_table_dealloc(idx);\n    return value;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n}\n/**\n * @param {any} options\n * @returns {Automerge}\n */\nexport function create(options) {\n    const ret = wasm.create(options);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return Automerge.__wrap(ret[0]);\n}\n\n/**\n * @param {Uint8Array} data\n * @param {any} options\n * @returns {Automerge}\n */\nexport function load(data, options) {\n    const ret = wasm.load(data, options);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return Automerge.__wrap(ret[0]);\n}\n\n/**\n * @param {any} change\n * @returns {Uint8Array}\n */\nexport function encodeChange(change) {\n    const ret = wasm.encodeChange(change);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {Uint8Array} change\n * @returns {DecodedChange}\n */\nexport function decodeChange(change) {\n    const ret = wasm.decodeChange(change);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @returns {SyncState}\n */\nexport function initSyncState() {\n    const ret = wasm.initSyncState();\n    return SyncState.__wrap(ret);\n}\n\n/**\n * @param {any} state\n * @returns {SyncState}\n */\nexport function importSyncState(state) {\n    const ret = wasm.importSyncState(state);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return SyncState.__wrap(ret[0]);\n}\n\n/**\n * @param {SyncState} state\n * @returns {JsSyncState}\n */\nexport function exportSyncState(state) {\n    _assertClass(state, SyncState);\n    const ret = wasm.exportSyncState(state.__wbg_ptr);\n    return ret;\n}\n\n/**\n * @param {any} message\n * @returns {SyncMessage}\n */\nexport function encodeSyncMessage(message) {\n    const ret = wasm.encodeSyncMessage(message);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {Uint8Array} msg\n * @returns {DecodedSyncMessage}\n */\nexport function decodeSyncMessage(msg) {\n    const ret = wasm.decodeSyncMessage(msg);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {SyncState} state\n * @returns {Uint8Array}\n */\nexport function encodeSyncState(state) {\n    _assertClass(state, SyncState);\n    const ret = wasm.encodeSyncState(state.__wbg_ptr);\n    return ret;\n}\n\n/**\n * @param {Uint8Array} data\n * @returns {SyncState}\n */\nexport function decodeSyncState(data) {\n    const ret = wasm.decodeSyncState(data);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return SyncState.__wrap(ret[0]);\n}\n\n/**\n * @param {Uint8Array} bundle\n * @returns {any}\n */\nexport function readBundle(bundle) {\n    const ret = wasm.readBundle(bundle);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\nconst AutomergeFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_automerge_free(ptr >>> 0, 1));\n\nexport class Automerge {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Automerge.prototype);\n        obj.__wbg_ptr = ptr;\n        AutomergeFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        AutomergeFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_automerge_free(ptr, 0);\n    }\n    /**\n     * @param {string | null} [actor]\n     * @returns {Automerge}\n     */\n    static new(actor) {\n        var ptr0 = isLikeNone(actor) ? 0 : passStringToWasm0(actor, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.automerge_new(ptr0, len0);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return Automerge.__wrap(ret[0]);\n    }\n    /**\n     * @param {string | null} [actor]\n     * @returns {Automerge}\n     */\n    clone(actor) {\n        var ptr0 = isLikeNone(actor) ? 0 : passStringToWasm0(actor, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.automerge_clone(this.__wbg_ptr, ptr0, len0);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return Automerge.__wrap(ret[0]);\n    }\n    /**\n     * @param {string | null | undefined} actor\n     * @param {any} heads\n     * @returns {Automerge}\n     */\n    fork(actor, heads) {\n        var ptr0 = isLikeNone(actor) ? 0 : passStringToWasm0(actor, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.automerge_fork(this.__wbg_ptr, ptr0, len0, heads);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return Automerge.__wrap(ret[0]);\n    }\n    /**\n     * @returns {number}\n     */\n    pendingOps() {\n        const ret = wasm.automerge_pendingOps(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {string | null} [message]\n     * @param {number | null} [time]\n     * @returns {Hash | null}\n     */\n    commit(message, time) {\n        var ptr0 = isLikeNone(message) ? 0 : passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.automerge_commit(this.__wbg_ptr, ptr0, len0, !isLikeNone(time), isLikeNone(time) ? 0 : time);\n        return ret;\n    }\n    /**\n     * @param {Automerge} other\n     * @returns {Heads}\n     */\n    merge(other) {\n        _assertClass(other, Automerge);\n        const ret = wasm.automerge_merge(this.__wbg_ptr, other.__wbg_ptr);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @returns {number}\n     */\n    rollback() {\n        const ret = wasm.automerge_rollback(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null} [heads]\n     * @returns {Array<any>}\n     */\n    keys(obj, heads) {\n        const ret = wasm.automerge_keys(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null} [heads]\n     * @returns {string}\n     */\n    text(obj, heads) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ret = wasm.automerge_text(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n            var ptr1 = ret[0];\n            var len1 = ret[1];\n            if (ret[3]) {\n                ptr1 = 0; len1 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null} [heads]\n     * @returns {Array<any>}\n     */\n    spans(obj, heads) {\n        const ret = wasm.automerge_spans(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {number} start\n     * @param {number} delete_count\n     * @param {any} text\n     */\n    splice(obj, start, delete_count, text) {\n        const ret = wasm.automerge_splice(this.__wbg_ptr, obj, start, delete_count, text);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {string} new_text\n     */\n    updateText(obj, new_text) {\n        const ret = wasm.automerge_updateText(this.__wbg_ptr, obj, new_text);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {Span[]} args\n     * @param {UpdateSpansConfig | undefined | null} config\n     */\n    updateSpans(obj, args, config) {\n        const ret = wasm.automerge_updateSpans(this.__wbg_ptr, obj, args, config);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {any} value\n     * @param {any} datatype\n     */\n    push(obj, value, datatype) {\n        const ret = wasm.automerge_push(this.__wbg_ptr, obj, value, datatype);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {ObjType} value\n     * @returns {ObjID}\n     */\n    pushObject(obj, value) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ret = wasm.automerge_pushObject(this.__wbg_ptr, obj, value);\n            var ptr1 = ret[0];\n            var len1 = ret[1];\n            if (ret[3]) {\n                ptr1 = 0; len1 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {number} index\n     * @param {any} value\n     * @param {any} datatype\n     */\n    insert(obj, index, value, datatype) {\n        const ret = wasm.automerge_insert(this.__wbg_ptr, obj, index, value, datatype);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {number} index\n     * @param {{[key: string]: MaterializeValue}} block\n     */\n    splitBlock(obj, index, block) {\n        const ret = wasm.automerge_splitBlock(this.__wbg_ptr, obj, index, block);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {number} index\n     */\n    joinBlock(obj, index) {\n        const ret = wasm.automerge_joinBlock(this.__wbg_ptr, obj, index);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {number} index\n     * @param {{[key: string]: MaterializeValue}} block\n     */\n    updateBlock(obj, index, block) {\n        const ret = wasm.automerge_updateBlock(this.__wbg_ptr, obj, index, block);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {any} text\n     * @param {number} index\n     * @param {Array<any> | null} [heads]\n     * @returns {any}\n     */\n    getBlock(text, index, heads) {\n        const ret = wasm.automerge_getBlock(this.__wbg_ptr, text, index, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {number} index\n     * @param {ObjType} value\n     * @returns {ObjID}\n     */\n    insertObject(obj, index, value) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ret = wasm.automerge_insertObject(this.__wbg_ptr, obj, index, value);\n            var ptr1 = ret[0];\n            var len1 = ret[1];\n            if (ret[3]) {\n                ptr1 = 0; len1 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {any} prop\n     * @param {any} value\n     * @param {any} datatype\n     */\n    put(obj, prop, value, datatype) {\n        const ret = wasm.automerge_put(this.__wbg_ptr, obj, prop, value, datatype);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {Prop} prop\n     * @param {ObjType} value\n     * @returns {ObjID}\n     */\n    putObject(obj, prop, value) {\n        const ret = wasm.automerge_putObject(this.__wbg_ptr, obj, prop, value);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {Prop} prop\n     * @param {number} value\n     */\n    increment(obj, prop, value) {\n        const ret = wasm.automerge_increment(this.__wbg_ptr, obj, prop, value);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {any} prop\n     * @param {Array<any> | null} [heads]\n     * @returns {any}\n     */\n    get(obj, prop, heads) {\n        const ret = wasm.automerge_get(this.__wbg_ptr, obj, prop, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {any} prop\n     * @param {Array<any> | null} [heads]\n     * @returns {any}\n     */\n    getWithType(obj, prop, heads) {\n        const ret = wasm.automerge_getWithType(this.__wbg_ptr, obj, prop, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null} [heads]\n     * @returns {object}\n     */\n    objInfo(obj, heads) {\n        const ret = wasm.automerge_objInfo(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {any} arg\n     * @param {Array<any> | null} [heads]\n     * @returns {Array<any>}\n     */\n    getAll(obj, arg, heads) {\n        const ret = wasm.automerge_getAll(this.__wbg_ptr, obj, arg, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {boolean} enable\n     * @returns {boolean}\n     */\n    enableFreeze(enable) {\n        const ret = wasm.automerge_enableFreeze(this.__wbg_ptr, enable);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return ret[0] !== 0;\n    }\n    /**\n     * @param {string} datatype\n     * @param {Function} construct\n     * @param {(arg: any) => any | undefined} deconstruct\n     */\n    registerDatatype(datatype, construct, deconstruct) {\n        const ret = wasm.automerge_registerDatatype(this.__wbg_ptr, datatype, construct, deconstruct);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {any} object\n     * @param {any} meta\n     * @returns {any}\n     */\n    applyPatches(object, meta) {\n        const ret = wasm.automerge_applyPatches(this.__wbg_ptr, object, meta);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} object\n     * @param {any} meta\n     * @returns {any}\n     */\n    applyAndReturnPatches(object, meta) {\n        const ret = wasm.automerge_applyAndReturnPatches(this.__wbg_ptr, object, meta);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @returns {Patch[]}\n     */\n    diffIncremental() {\n        const ret = wasm.automerge_diffIncremental(this.__wbg_ptr);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    updateDiffCursor() {\n        wasm.automerge_updateDiffCursor(this.__wbg_ptr);\n    }\n    resetDiffCursor() {\n        wasm.automerge_resetDiffCursor(this.__wbg_ptr);\n    }\n    /**\n     * @param {Heads} before\n     * @param {Heads} after\n     * @returns {Patch[]}\n     */\n    diff(before, after) {\n        const ret = wasm.automerge_diff(this.__wbg_ptr, before, after);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Heads} heads\n     */\n    isolate(heads) {\n        const ret = wasm.automerge_isolate(this.__wbg_ptr, heads);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    integrate() {\n        wasm.automerge_integrate(this.__wbg_ptr);\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null} [heads]\n     * @returns {number}\n     */\n    length(obj, heads) {\n        const ret = wasm.automerge_length(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return ret[0];\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {Prop} prop\n     */\n    delete(obj, prop) {\n        const ret = wasm.automerge_delete(this.__wbg_ptr, obj, prop);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @returns {Uint8Array}\n     */\n    save() {\n        const ret = wasm.automerge_save(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Uint8Array}\n     */\n    saveIncremental() {\n        const ret = wasm.automerge_saveIncremental(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {Heads} heads\n     * @returns {Uint8Array}\n     */\n    saveSince(heads) {\n        const ret = wasm.automerge_saveSince(this.__wbg_ptr, heads);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @returns {Uint8Array}\n     */\n    saveNoCompress() {\n        const ret = wasm.automerge_saveNoCompress(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Uint8Array}\n     */\n    saveAndVerify() {\n        const ret = wasm.automerge_saveAndVerify(this.__wbg_ptr);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Uint8Array} data\n     * @returns {number}\n     */\n    loadIncremental(data) {\n        const ret = wasm.automerge_loadIncremental(this.__wbg_ptr, data);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return ret[0];\n    }\n    /**\n     * @param {Change[]} changes\n     */\n    applyChanges(changes) {\n        const ret = wasm.automerge_applyChanges(this.__wbg_ptr, changes);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {Heads} have_deps\n     * @returns {Change[]}\n     */\n    getChanges(have_deps) {\n        const ret = wasm.automerge_getChanges(this.__wbg_ptr, have_deps);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Heads} have_deps\n     * @returns {ChangeMetadata[]}\n     */\n    getChangesMeta(have_deps) {\n        const ret = wasm.automerge_getChangesMeta(this.__wbg_ptr, have_deps);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Hash} hash\n     * @returns {Change | null}\n     */\n    getChangeByHash(hash) {\n        const ret = wasm.automerge_getChangeByHash(this.__wbg_ptr, hash);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Hash} hash\n     * @returns {ChangeMetadata | null}\n     */\n    getChangeMetaByHash(hash) {\n        const ret = wasm.automerge_getChangeMetaByHash(this.__wbg_ptr, hash);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Hash} hash\n     * @returns {DecodedChange | null}\n     */\n    getDecodedChangeByHash(hash) {\n        const ret = wasm.automerge_getDecodedChangeByHash(this.__wbg_ptr, hash);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Automerge} other\n     * @returns {Change[]}\n     */\n    getChangesAdded(other) {\n        _assertClass(other, Automerge);\n        const ret = wasm.automerge_getChangesAdded(this.__wbg_ptr, other.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Heads}\n     */\n    getHeads() {\n        const ret = wasm.automerge_getHeads(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Actor}\n     */\n    getActorId() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const ret = wasm.automerge_getActorId(this.__wbg_ptr);\n            deferred1_0 = ret[0];\n            deferred1_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n     * @returns {Change | null}\n     */\n    getLastLocalChange() {\n        const ret = wasm.automerge_getLastLocalChange(this.__wbg_ptr);\n        return ret;\n    }\n    dump() {\n        wasm.automerge_dump(this.__wbg_ptr);\n    }\n    /**\n     * @param {Array<any> | null} [heads]\n     * @returns {Array<any>}\n     */\n    getMissingDeps(heads) {\n        const ret = wasm.automerge_getMissingDeps(this.__wbg_ptr, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {SyncState} state\n     * @param {SyncMessage} message\n     */\n    receiveSyncMessage(state, message) {\n        _assertClass(state, SyncState);\n        const ret = wasm.automerge_receiveSyncMessage(this.__wbg_ptr, state.__wbg_ptr, message);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {SyncState} state\n     * @returns {SyncMessage | null}\n     */\n    generateSyncMessage(state) {\n        _assertClass(state, SyncState);\n        const ret = wasm.automerge_generateSyncMessage(this.__wbg_ptr, state.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {any} meta\n     * @returns {MaterializeValue}\n     */\n    toJS(meta) {\n        const ret = wasm.automerge_toJS(this.__wbg_ptr, meta);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null | undefined} heads\n     * @param {any} meta\n     * @returns {any}\n     */\n    materialize(obj, heads, meta) {\n        const ret = wasm.automerge_materialize(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads), meta);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {any} position\n     * @param {Array<any> | null | undefined} heads\n     * @param {any} move_cursor\n     * @returns {string}\n     */\n    getCursor(obj, position, heads, move_cursor) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ret = wasm.automerge_getCursor(this.__wbg_ptr, obj, position, isLikeNone(heads) ? 0 : addToExternrefTable0(heads), move_cursor);\n            var ptr1 = ret[0];\n            var len1 = ret[1];\n            if (ret[3]) {\n                ptr1 = 0; len1 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {any} cursor\n     * @param {Array<any> | null} [heads]\n     * @returns {number}\n     */\n    getCursorPosition(obj, cursor, heads) {\n        const ret = wasm.automerge_getCursorPosition(this.__wbg_ptr, obj, cursor, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return ret[0];\n    }\n    /**\n     * @param {string | null} [message]\n     * @param {number | null} [time]\n     * @returns {Hash}\n     */\n    emptyChange(message, time) {\n        var ptr0 = isLikeNone(message) ? 0 : passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.automerge_emptyChange(this.__wbg_ptr, ptr0, len0, !isLikeNone(time), isLikeNone(time) ? 0 : time);\n        return ret;\n    }\n    /**\n     * @param {any} obj\n     * @param {any} range\n     * @param {any} name\n     * @param {any} value\n     * @param {any} datatype\n     */\n    mark(obj, range, name, value, datatype) {\n        const ret = wasm.automerge_mark(this.__wbg_ptr, obj, range, name, value, datatype);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {MarkRange} range\n     * @param {string} name\n     */\n    unmark(obj, range, name) {\n        const ret = wasm.automerge_unmark(this.__wbg_ptr, obj, range, name);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null} [heads]\n     * @returns {any}\n     */\n    marks(obj, heads) {\n        const ret = wasm.automerge_marks(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {number} index\n     * @param {Array<any> | null} [heads]\n     * @returns {object}\n     */\n    marksAt(obj, index, heads) {\n        const ret = wasm.automerge_marksAt(this.__wbg_ptr, obj, index, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {SyncState} state\n     * @returns {boolean}\n     */\n    hasOurChanges(state) {\n        _assertClass(state, SyncState);\n        const ret = wasm.automerge_hasOurChanges(this.__wbg_ptr, state.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n     * @returns {Hash[]}\n     */\n    topoHistoryTraversal() {\n        const ret = wasm.automerge_topoHistoryTraversal(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Stats}\n     */\n    stats() {\n        const ret = wasm.automerge_stats(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {any} hashes\n     * @returns {Uint8Array}\n     */\n    saveBundle(hashes) {\n        const ret = wasm.automerge_saveBundle(this.__wbg_ptr, hashes);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n}\nif (Symbol.dispose) Automerge.prototype[Symbol.dispose] = Automerge.prototype.free;\n\nconst SyncStateFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_syncstate_free(ptr >>> 0, 1));\n\nexport class SyncState {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(SyncState.prototype);\n        obj.__wbg_ptr = ptr;\n        SyncStateFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        SyncStateFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_syncstate_free(ptr, 0);\n    }\n    /**\n     * @returns {Heads}\n     */\n    get sharedHeads() {\n        const ret = wasm.syncstate_sharedHeads(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Heads}\n     */\n    get lastSentHeads() {\n        const ret = wasm.syncstate_lastSentHeads(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {Heads} heads\n     */\n    set lastSentHeads(heads) {\n        const ret = wasm.syncstate_set_lastSentHeads(this.__wbg_ptr, heads);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {Heads} hashes\n     */\n    set sentHashes(hashes) {\n        const ret = wasm.syncstate_set_sentHashes(this.__wbg_ptr, hashes);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @returns {SyncState}\n     */\n    clone() {\n        const ret = wasm.syncstate_clone(this.__wbg_ptr);\n        return SyncState.__wrap(ret);\n    }\n}\nif (Symbol.dispose) SyncState.prototype[Symbol.dispose] = SyncState.prototype.free;\n\nconst EXPECTED_RESPONSE_TYPES = new Set(['basic', 'cors', 'default']);\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                const validResponse = module.ok && EXPECTED_RESPONSE_TYPES.has(module.type);\n\n                if (validResponse && module.headers.get('Content-Type') !== 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_BigInt_6adbfd8eb0f7ec07 = function(arg0) {\n        const ret = BigInt(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_Error_e17e777aac105295 = function(arg0, arg1) {\n        const ret = Error(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_String_8f0eb39a4a4c2f66 = function(arg0, arg1) {\n        const ret = String(arg1);\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_apply_55d63d092a912d6f = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.apply(arg0, arg1, arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_assign_66f7942767cba7e3 = function(arg0, arg1) {\n        const ret = Object.assign(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbg_call_13410aac570ffff7 = function() { return handleError(function (arg0, arg1) {\n        const ret = arg0.call(arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_call_a5400b25a865cfd8 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = arg0.call(arg1, arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_concat_4a5e81410543b8f3 = function(arg0, arg1) {\n        const ret = arg0.concat(arg1);\n        return ret;\n    };\n    imports.wbg.__wbg_defineProperty_1afba89a75bc184f = function(arg0, arg1, arg2) {\n        const ret = Object.defineProperty(arg0, arg1, arg2);\n        return ret;\n    };\n    imports.wbg.__wbg_deleteProperty_5fe99f4fd0f66ebe = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.deleteProperty(arg0, arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_done_75ed0ee6dd243d9d = function(arg0) {\n        const ret = arg0.done;\n        return ret;\n    };\n    imports.wbg.__wbg_entries_2be2f15bd5554996 = function(arg0) {\n        const ret = Object.entries(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_error_7534b8e9a36f1ab4 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_for_fbb1cf47b8d6b3f6 = function(arg0, arg1) {\n        const ret = Symbol.for(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_freeze_881cf93497533f9e = function(arg0) {\n        const ret = Object.freeze(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_from_88bc52ce20ba6318 = function(arg0) {\n        const ret = Array.from(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_getRandomValues_1c61fac11405ffdc = function() { return handleError(function (arg0, arg1) {\n        globalThis.crypto.getRandomValues(getArrayU8FromWasm0(arg0, arg1));\n    }, arguments) };\n    imports.wbg.__wbg_getTime_6bb3f64e0f18f817 = function(arg0) {\n        const ret = arg0.getTime();\n        return ret;\n    };\n    imports.wbg.__wbg_get_0da715ceaecea5c8 = function(arg0, arg1) {\n        const ret = arg0[arg1 >>> 0];\n        return ret;\n    };\n    imports.wbg.__wbg_get_458e874b43b18b25 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(arg0, arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_instanceof_ArrayBuffer_67f3012529f6a2dd = function(arg0) {\n        let result;\n        try {\n            result = arg0 instanceof ArrayBuffer;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Date_c0cdff0c3b978b0e = function(arg0) {\n        let result;\n        try {\n            result = arg0 instanceof Date;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Object_fbf5fef4952ff29b = function(arg0) {\n        let result;\n        try {\n            result = arg0 instanceof Object;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Uint8Array_9a8378d955933db7 = function(arg0) {\n        let result;\n        try {\n            result = arg0 instanceof Uint8Array;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_isArray_030cce220591fb41 = function(arg0) {\n        const ret = Array.isArray(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_isArray_52653600d4b65388 = function(arg0) {\n        const ret = Array.isArray(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_iterator_f370b34483c71a1c = function() {\n        const ret = Symbol.iterator;\n        return ret;\n    };\n    imports.wbg.__wbg_keys_ef52390b2ae0e714 = function(arg0) {\n        const ret = Object.keys(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_length_186546c51cd61acd = function(arg0) {\n        const ret = arg0.length;\n        return ret;\n    };\n    imports.wbg.__wbg_length_6bb7e81f9d7713e4 = function(arg0) {\n        const ret = arg0.length;\n        return ret;\n    };\n    imports.wbg.__wbg_length_9d771c54845e987f = function(arg0) {\n        const ret = arg0.length;\n        return ret;\n    };\n    imports.wbg.__wbg_log_6c7b5f4f00b8ce3f = function(arg0) {\n        console.log(arg0);\n    };\n    imports.wbg.__wbg_log_7917fde260a8fd39 = function(arg0, arg1) {\n        console.log(arg0, arg1);\n    };\n    imports.wbg.__wbg_new_19c25a3f2fa63a02 = function() {\n        const ret = new Object();\n        return ret;\n    };\n    imports.wbg.__wbg_new_1f3a344cf3123716 = function() {\n        const ret = new Array();\n        return ret;\n    };\n    imports.wbg.__wbg_new_5a2ae4557f92b50e = function(arg0) {\n        const ret = new Date(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_new_638ebfaedbf32a5e = function(arg0) {\n        const ret = new Uint8Array(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_new_8a6f238a6ece86ea = function() {\n        const ret = new Error();\n        return ret;\n    };\n    imports.wbg.__wbg_new_da9dc54c5db29dfa = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_new_ef4f9056d946f38b = function(arg0, arg1) {\n        const ret = new RangeError(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_newfromslice_074c56947bd43469 = function(arg0, arg1) {\n        const ret = new Uint8Array(getArrayU8FromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_next_5b3530e612fde77d = function(arg0) {\n        const ret = arg0.next;\n        return ret;\n    };\n    imports.wbg.__wbg_next_692e82279131b03c = function() { return handleError(function (arg0) {\n        const ret = arg0.next();\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_ownKeys_36e096e00ffe2676 = function() { return handleError(function (arg0) {\n        const ret = Reflect.ownKeys(arg0);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_prototypesetcall_3d4a26c1ed734349 = function(arg0, arg1, arg2) {\n        Uint8Array.prototype.set.call(getArrayU8FromWasm0(arg0, arg1), arg2);\n    };\n    imports.wbg.__wbg_push_330b2eb93e4e1212 = function(arg0, arg1) {\n        const ret = arg0.push(arg1);\n        return ret;\n    };\n    imports.wbg.__wbg_set_3f1d0b984ed272ed = function(arg0, arg1, arg2) {\n        arg0[arg1] = arg2;\n    };\n    imports.wbg.__wbg_set_453345bcda80b89a = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.set(arg0, arg1, arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_set_90f6c0f7bd8c0415 = function(arg0, arg1, arg2) {\n        arg0[arg1 >>> 0] = arg2;\n    };\n    imports.wbg.__wbg_slice_974daea329f5c01d = function(arg0, arg1, arg2) {\n        const ret = arg0.slice(arg1 >>> 0, arg2 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_stack_0ed75d68575b0f3c = function(arg0, arg1) {\n        const ret = arg1.stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_stringify_4a34a65f0d4e236f = function(arg0, arg1) {\n        const ret = JSON.stringify(arg1);\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_toString_1f1286a7a97689fe = function(arg0, arg1, arg2) {\n        const ret = arg1.toString(arg2);\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_toString_7268338f40012a03 = function() { return handleError(function (arg0, arg1) {\n        const ret = arg0.toString(arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_toString_ea9a6b07f936eb86 = function(arg0) {\n        const ret = arg0.toString();\n        return ret;\n    };\n    imports.wbg.__wbg_unshift_18d353edeebf9a72 = function(arg0, arg1) {\n        const ret = arg0.unshift(arg1);\n        return ret;\n    };\n    imports.wbg.__wbg_value_dd9372230531eade = function(arg0) {\n        const ret = arg0.value;\n        return ret;\n    };\n    imports.wbg.__wbg_values_a574c29011369bea = function(arg0) {\n        const ret = Object.values(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenbooleanget_3fe6f642c7d97746 = function(arg0) {\n        const v = arg0;\n        const ret = typeof(v) === 'boolean' ? v : undefined;\n        return isLikeNone(ret) ? 0xFFFFFF : ret ? 1 : 0;\n    };\n    imports.wbg.__wbg_wbindgendebugstring_99ef257a3ddda34d = function(arg0, arg1) {\n        const ret = debugString(arg1);\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_wbindgengt_5d4c5d18810de162 = function(arg0, arg1) {\n        const ret = arg0 > arg1;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisbigint_ecb90cc08a5a9154 = function(arg0) {\n        const ret = typeof(arg0) === 'bigint';\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisfunction_8cee7dce3725ae74 = function(arg0) {\n        const ret = typeof(arg0) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisnull_f3037694abe4d97a = function(arg0) {\n        const ret = arg0 === null;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisobject_307a53c6bd97fbf8 = function(arg0) {\n        const val = arg0;\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisstring_d4fa939789f003b0 = function(arg0) {\n        const ret = typeof(arg0) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisundefined_c4b71d073b92f3c5 = function(arg0) {\n        const ret = arg0 === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenjsvallooseeq_9bec8c9be826bed1 = function(arg0, arg1) {\n        const ret = arg0 == arg1;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenlt_544155a2b3097bd5 = function(arg0, arg1) {\n        const ret = arg0 < arg1;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenneg_3577d8a6fd6fd98b = function(arg0) {\n        const ret = -arg0;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgennumberget_f74b4c7525ac05cb = function(arg0, arg1) {\n        const obj = arg1;\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getDataViewMemory0().setFloat64(arg0 + 8 * 1, isLikeNone(ret) ? 0 : ret, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n    };\n    imports.wbg.__wbg_wbindgenstringget_0f16a6ddddef376f = function(arg0, arg1) {\n        const obj = arg1;\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_wbindgenthrow_451ec1a8469d7eb6 = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_cast_2241b6af4c4b2941 = function(arg0, arg1) {\n        // Cast intrinsic for `Ref(String) -> Externref`.\n        const ret = getStringFromWasm0(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_4625c577ab2ec9ee = function(arg0) {\n        // Cast intrinsic for `U64 -> Externref`.\n        const ret = BigInt.asUintN(64, arg0);\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_9ae0607507abb057 = function(arg0) {\n        // Cast intrinsic for `I64 -> Externref`.\n        const ret = arg0;\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_d6cd19b81560fd6e = function(arg0) {\n        // Cast intrinsic for `F64 -> Externref`.\n        const ret = arg0;\n        return ret;\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_4;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedDataViewMemory0 = null;\n    cachedUint8ArrayMemory0 = null;\n\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new /* @vite-ignore */ URL('automerge_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n", "import { default as initWasm } from \"./wasm_bindgen_output/web/automerge_wasm.js\";\nimport * as WasmApi from \"./wasm_bindgen_output/web/automerge_wasm.js\";\nlet _initialized = false;\nlet _initializeListeners = [];\nexport function UseApi(api) {\n    for (const k in api) {\n        // eslint-disable-next-line no-extra-semi\n        ;\n        ApiHandler[k] = api[k];\n    }\n    _initialized = true;\n    for (const listener of _initializeListeners) {\n        listener();\n    }\n}\n/* eslint-disable */\nexport const ApiHandler = {\n    create(options) {\n        throw new RangeError(\"Automerge.use() not called\");\n    },\n    load(data, options) {\n        throw new RangeError(\"Automerge.use() not called (load)\");\n    },\n    encodeChange(change) {\n        throw new RangeError(\"Automerge.use() not called (encodeChange)\");\n    },\n    decodeChange(change) {\n        throw new RangeError(\"Automerge.use() not called (decodeChange)\");\n    },\n    initSyncState() {\n        throw new RangeError(\"Automerge.use() not called (initSyncState)\");\n    },\n    encodeSyncMessage(message) {\n        throw new RangeError(\"Automerge.use() not called (encodeSyncMessage)\");\n    },\n    decodeSyncMessage(msg) {\n        throw new RangeError(\"Automerge.use() not called (decodeSyncMessage)\");\n    },\n    encodeSyncState(state) {\n        throw new RangeError(\"Automerge.use() not called (encodeSyncState)\");\n    },\n    decodeSyncState(data) {\n        throw new RangeError(\"Automerge.use() not called (decodeSyncState)\");\n    },\n    exportSyncState(state) {\n        throw new RangeError(\"Automerge.use() not called (exportSyncState)\");\n    },\n    importSyncState(state) {\n        throw new RangeError(\"Automerge.use() not called (importSyncState)\");\n    },\n    readBundle(data) {\n        throw new RangeError(\"Automerge.use() not called (readBundle)\");\n    },\n};\n/* eslint-enable */\n/**\n * Initialize the wasm module\n *\n * @param wasmBlob - The wasm module as a Uint8Array, Request, Promise<Uint8Array> or string. If this argument is a string then it is assumed to be a URL and the library will attempt to fetch the wasm module from that URL.\n *\n * @remarks\n * If you are using the `/slim` subpath export then this function must be\n * called before any other functions in the library. If you are using any of\n * the other subpath exports then it will have already been called for you.\n */\nexport function initializeWasm(wasmBlob) {\n    return initWasm({ module_or_path: wasmBlob }).then(_ => {\n        UseApi(WasmApi);\n    });\n}\n/**\n * Initialize the wasm module from a base64 encoded string\n *\n * @param wasmBase64 - The bytes of the wasm file as a base64 encoded string\n */\nexport function initializeBase64Wasm(wasmBase64) {\n    return initializeWasm(Uint8Array.from(atob(wasmBase64), c => c.charCodeAt(0)));\n}\n/**\n * A promise which resolves when the web assembly module has been initialized\n * (or immediately if it has already been initialized)\n */\nexport function wasmInitialized() {\n    if (_initialized)\n        return Promise.resolve();\n    return new Promise(resolve => {\n        _initializeListeners.push(resolve);\n    });\n}\n/**\n * Check if the wasm module has been initialized\n *\n * @returns true if the wasm module has been initialized\n */\nexport function isWasmInitialized() {\n    return _initialized;\n}\n", "import * as wasm from \"./automerge_wasm_bg.wasm\";\nexport * from \"./automerge_wasm_bg.js\";\nimport { __wbg_set_wasm } from \"./automerge_wasm_bg.js\";\n__wbg_set_wasm(wasm);\nwasm.__wbindgen_start();\n", "let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nconst MAX_SAFARI_DECODE_BYTES = 2146435072;\nlet numBytesDecoded = 0;\nfunction decodeText(ptr, len) {\n    numBytesDecoded += len;\n    if (numBytesDecoded >= MAX_SAFARI_DECODE_BYTES) {\n        cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n        cachedTextDecoder.decode();\n        numBytesDecoded = len;\n    }\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return decodeText(ptr, len);\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = new TextEncoder();\n\nif (!('encodeInto' in cachedTextEncoder)) {\n    cachedTextEncoder.encodeInto = function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    }\n}\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = cachedTextEncoder.encodeInto(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_4.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches && builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction takeFromExternrefTable0(idx) {\n    const value = wasm.__wbindgen_export_4.get(idx);\n    wasm.__externref_table_dealloc(idx);\n    return value;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n}\n/**\n * @param {any} options\n * @returns {Automerge}\n */\nexport function create(options) {\n    const ret = wasm.create(options);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return Automerge.__wrap(ret[0]);\n}\n\n/**\n * @param {Uint8Array} data\n * @param {any} options\n * @returns {Automerge}\n */\nexport function load(data, options) {\n    const ret = wasm.load(data, options);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return Automerge.__wrap(ret[0]);\n}\n\n/**\n * @param {any} change\n * @returns {Uint8Array}\n */\nexport function encodeChange(change) {\n    const ret = wasm.encodeChange(change);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {Uint8Array} change\n * @returns {DecodedChange}\n */\nexport function decodeChange(change) {\n    const ret = wasm.decodeChange(change);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @returns {SyncState}\n */\nexport function initSyncState() {\n    const ret = wasm.initSyncState();\n    return SyncState.__wrap(ret);\n}\n\n/**\n * @param {any} state\n * @returns {SyncState}\n */\nexport function importSyncState(state) {\n    const ret = wasm.importSyncState(state);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return SyncState.__wrap(ret[0]);\n}\n\n/**\n * @param {SyncState} state\n * @returns {JsSyncState}\n */\nexport function exportSyncState(state) {\n    _assertClass(state, SyncState);\n    const ret = wasm.exportSyncState(state.__wbg_ptr);\n    return ret;\n}\n\n/**\n * @param {any} message\n * @returns {SyncMessage}\n */\nexport function encodeSyncMessage(message) {\n    const ret = wasm.encodeSyncMessage(message);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {Uint8Array} msg\n * @returns {DecodedSyncMessage}\n */\nexport function decodeSyncMessage(msg) {\n    const ret = wasm.decodeSyncMessage(msg);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {SyncState} state\n * @returns {Uint8Array}\n */\nexport function encodeSyncState(state) {\n    _assertClass(state, SyncState);\n    const ret = wasm.encodeSyncState(state.__wbg_ptr);\n    return ret;\n}\n\n/**\n * @param {Uint8Array} data\n * @returns {SyncState}\n */\nexport function decodeSyncState(data) {\n    const ret = wasm.decodeSyncState(data);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return SyncState.__wrap(ret[0]);\n}\n\n/**\n * @param {Uint8Array} bundle\n * @returns {any}\n */\nexport function readBundle(bundle) {\n    const ret = wasm.readBundle(bundle);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\nconst AutomergeFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_automerge_free(ptr >>> 0, 1));\n\nexport class Automerge {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Automerge.prototype);\n        obj.__wbg_ptr = ptr;\n        AutomergeFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        AutomergeFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_automerge_free(ptr, 0);\n    }\n    /**\n     * @param {string | null} [actor]\n     * @returns {Automerge}\n     */\n    static new(actor) {\n        var ptr0 = isLikeNone(actor) ? 0 : passStringToWasm0(actor, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.automerge_new(ptr0, len0);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return Automerge.__wrap(ret[0]);\n    }\n    /**\n     * @param {string | null} [actor]\n     * @returns {Automerge}\n     */\n    clone(actor) {\n        var ptr0 = isLikeNone(actor) ? 0 : passStringToWasm0(actor, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.automerge_clone(this.__wbg_ptr, ptr0, len0);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return Automerge.__wrap(ret[0]);\n    }\n    /**\n     * @param {string | null | undefined} actor\n     * @param {any} heads\n     * @returns {Automerge}\n     */\n    fork(actor, heads) {\n        var ptr0 = isLikeNone(actor) ? 0 : passStringToWasm0(actor, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.automerge_fork(this.__wbg_ptr, ptr0, len0, heads);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return Automerge.__wrap(ret[0]);\n    }\n    /**\n     * @returns {number}\n     */\n    pendingOps() {\n        const ret = wasm.automerge_pendingOps(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {string | null} [message]\n     * @param {number | null} [time]\n     * @returns {Hash | null}\n     */\n    commit(message, time) {\n        var ptr0 = isLikeNone(message) ? 0 : passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.automerge_commit(this.__wbg_ptr, ptr0, len0, !isLikeNone(time), isLikeNone(time) ? 0 : time);\n        return ret;\n    }\n    /**\n     * @param {Automerge} other\n     * @returns {Heads}\n     */\n    merge(other) {\n        _assertClass(other, Automerge);\n        const ret = wasm.automerge_merge(this.__wbg_ptr, other.__wbg_ptr);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @returns {number}\n     */\n    rollback() {\n        const ret = wasm.automerge_rollback(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null} [heads]\n     * @returns {Array<any>}\n     */\n    keys(obj, heads) {\n        const ret = wasm.automerge_keys(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null} [heads]\n     * @returns {string}\n     */\n    text(obj, heads) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ret = wasm.automerge_text(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n            var ptr1 = ret[0];\n            var len1 = ret[1];\n            if (ret[3]) {\n                ptr1 = 0; len1 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null} [heads]\n     * @returns {Array<any>}\n     */\n    spans(obj, heads) {\n        const ret = wasm.automerge_spans(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {number} start\n     * @param {number} delete_count\n     * @param {any} text\n     */\n    splice(obj, start, delete_count, text) {\n        const ret = wasm.automerge_splice(this.__wbg_ptr, obj, start, delete_count, text);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {string} new_text\n     */\n    updateText(obj, new_text) {\n        const ret = wasm.automerge_updateText(this.__wbg_ptr, obj, new_text);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {Span[]} args\n     * @param {UpdateSpansConfig | undefined | null} config\n     */\n    updateSpans(obj, args, config) {\n        const ret = wasm.automerge_updateSpans(this.__wbg_ptr, obj, args, config);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {any} value\n     * @param {any} datatype\n     */\n    push(obj, value, datatype) {\n        const ret = wasm.automerge_push(this.__wbg_ptr, obj, value, datatype);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {ObjType} value\n     * @returns {ObjID}\n     */\n    pushObject(obj, value) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ret = wasm.automerge_pushObject(this.__wbg_ptr, obj, value);\n            var ptr1 = ret[0];\n            var len1 = ret[1];\n            if (ret[3]) {\n                ptr1 = 0; len1 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {number} index\n     * @param {any} value\n     * @param {any} datatype\n     */\n    insert(obj, index, value, datatype) {\n        const ret = wasm.automerge_insert(this.__wbg_ptr, obj, index, value, datatype);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {number} index\n     * @param {{[key: string]: MaterializeValue}} block\n     */\n    splitBlock(obj, index, block) {\n        const ret = wasm.automerge_splitBlock(this.__wbg_ptr, obj, index, block);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {number} index\n     */\n    joinBlock(obj, index) {\n        const ret = wasm.automerge_joinBlock(this.__wbg_ptr, obj, index);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {number} index\n     * @param {{[key: string]: MaterializeValue}} block\n     */\n    updateBlock(obj, index, block) {\n        const ret = wasm.automerge_updateBlock(this.__wbg_ptr, obj, index, block);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {any} text\n     * @param {number} index\n     * @param {Array<any> | null} [heads]\n     * @returns {any}\n     */\n    getBlock(text, index, heads) {\n        const ret = wasm.automerge_getBlock(this.__wbg_ptr, text, index, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {number} index\n     * @param {ObjType} value\n     * @returns {ObjID}\n     */\n    insertObject(obj, index, value) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ret = wasm.automerge_insertObject(this.__wbg_ptr, obj, index, value);\n            var ptr1 = ret[0];\n            var len1 = ret[1];\n            if (ret[3]) {\n                ptr1 = 0; len1 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {any} prop\n     * @param {any} value\n     * @param {any} datatype\n     */\n    put(obj, prop, value, datatype) {\n        const ret = wasm.automerge_put(this.__wbg_ptr, obj, prop, value, datatype);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {Prop} prop\n     * @param {ObjType} value\n     * @returns {ObjID}\n     */\n    putObject(obj, prop, value) {\n        const ret = wasm.automerge_putObject(this.__wbg_ptr, obj, prop, value);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {Prop} prop\n     * @param {number} value\n     */\n    increment(obj, prop, value) {\n        const ret = wasm.automerge_increment(this.__wbg_ptr, obj, prop, value);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {any} prop\n     * @param {Array<any> | null} [heads]\n     * @returns {any}\n     */\n    get(obj, prop, heads) {\n        const ret = wasm.automerge_get(this.__wbg_ptr, obj, prop, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {any} prop\n     * @param {Array<any> | null} [heads]\n     * @returns {any}\n     */\n    getWithType(obj, prop, heads) {\n        const ret = wasm.automerge_getWithType(this.__wbg_ptr, obj, prop, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null} [heads]\n     * @returns {object}\n     */\n    objInfo(obj, heads) {\n        const ret = wasm.automerge_objInfo(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {any} arg\n     * @param {Array<any> | null} [heads]\n     * @returns {Array<any>}\n     */\n    getAll(obj, arg, heads) {\n        const ret = wasm.automerge_getAll(this.__wbg_ptr, obj, arg, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {boolean} enable\n     * @returns {boolean}\n     */\n    enableFreeze(enable) {\n        const ret = wasm.automerge_enableFreeze(this.__wbg_ptr, enable);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return ret[0] !== 0;\n    }\n    /**\n     * @param {string} datatype\n     * @param {Function} construct\n     * @param {(arg: any) => any | undefined} deconstruct\n     */\n    registerDatatype(datatype, construct, deconstruct) {\n        const ret = wasm.automerge_registerDatatype(this.__wbg_ptr, datatype, construct, deconstruct);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {any} object\n     * @param {any} meta\n     * @returns {any}\n     */\n    applyPatches(object, meta) {\n        const ret = wasm.automerge_applyPatches(this.__wbg_ptr, object, meta);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} object\n     * @param {any} meta\n     * @returns {any}\n     */\n    applyAndReturnPatches(object, meta) {\n        const ret = wasm.automerge_applyAndReturnPatches(this.__wbg_ptr, object, meta);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @returns {Patch[]}\n     */\n    diffIncremental() {\n        const ret = wasm.automerge_diffIncremental(this.__wbg_ptr);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    updateDiffCursor() {\n        wasm.automerge_updateDiffCursor(this.__wbg_ptr);\n    }\n    resetDiffCursor() {\n        wasm.automerge_resetDiffCursor(this.__wbg_ptr);\n    }\n    /**\n     * @param {Heads} before\n     * @param {Heads} after\n     * @returns {Patch[]}\n     */\n    diff(before, after) {\n        const ret = wasm.automerge_diff(this.__wbg_ptr, before, after);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Heads} heads\n     */\n    isolate(heads) {\n        const ret = wasm.automerge_isolate(this.__wbg_ptr, heads);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    integrate() {\n        wasm.automerge_integrate(this.__wbg_ptr);\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null} [heads]\n     * @returns {number}\n     */\n    length(obj, heads) {\n        const ret = wasm.automerge_length(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return ret[0];\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {Prop} prop\n     */\n    delete(obj, prop) {\n        const ret = wasm.automerge_delete(this.__wbg_ptr, obj, prop);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @returns {Uint8Array}\n     */\n    save() {\n        const ret = wasm.automerge_save(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Uint8Array}\n     */\n    saveIncremental() {\n        const ret = wasm.automerge_saveIncremental(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {Heads} heads\n     * @returns {Uint8Array}\n     */\n    saveSince(heads) {\n        const ret = wasm.automerge_saveSince(this.__wbg_ptr, heads);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @returns {Uint8Array}\n     */\n    saveNoCompress() {\n        const ret = wasm.automerge_saveNoCompress(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Uint8Array}\n     */\n    saveAndVerify() {\n        const ret = wasm.automerge_saveAndVerify(this.__wbg_ptr);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Uint8Array} data\n     * @returns {number}\n     */\n    loadIncremental(data) {\n        const ret = wasm.automerge_loadIncremental(this.__wbg_ptr, data);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return ret[0];\n    }\n    /**\n     * @param {Change[]} changes\n     */\n    applyChanges(changes) {\n        const ret = wasm.automerge_applyChanges(this.__wbg_ptr, changes);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {Heads} have_deps\n     * @returns {Change[]}\n     */\n    getChanges(have_deps) {\n        const ret = wasm.automerge_getChanges(this.__wbg_ptr, have_deps);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Heads} have_deps\n     * @returns {ChangeMetadata[]}\n     */\n    getChangesMeta(have_deps) {\n        const ret = wasm.automerge_getChangesMeta(this.__wbg_ptr, have_deps);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Hash} hash\n     * @returns {Change | null}\n     */\n    getChangeByHash(hash) {\n        const ret = wasm.automerge_getChangeByHash(this.__wbg_ptr, hash);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Hash} hash\n     * @returns {ChangeMetadata | null}\n     */\n    getChangeMetaByHash(hash) {\n        const ret = wasm.automerge_getChangeMetaByHash(this.__wbg_ptr, hash);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Hash} hash\n     * @returns {DecodedChange | null}\n     */\n    getDecodedChangeByHash(hash) {\n        const ret = wasm.automerge_getDecodedChangeByHash(this.__wbg_ptr, hash);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {Automerge} other\n     * @returns {Change[]}\n     */\n    getChangesAdded(other) {\n        _assertClass(other, Automerge);\n        const ret = wasm.automerge_getChangesAdded(this.__wbg_ptr, other.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Heads}\n     */\n    getHeads() {\n        const ret = wasm.automerge_getHeads(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Actor}\n     */\n    getActorId() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const ret = wasm.automerge_getActorId(this.__wbg_ptr);\n            deferred1_0 = ret[0];\n            deferred1_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n     * @returns {Change | null}\n     */\n    getLastLocalChange() {\n        const ret = wasm.automerge_getLastLocalChange(this.__wbg_ptr);\n        return ret;\n    }\n    dump() {\n        wasm.automerge_dump(this.__wbg_ptr);\n    }\n    /**\n     * @param {Array<any> | null} [heads]\n     * @returns {Array<any>}\n     */\n    getMissingDeps(heads) {\n        const ret = wasm.automerge_getMissingDeps(this.__wbg_ptr, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {SyncState} state\n     * @param {SyncMessage} message\n     */\n    receiveSyncMessage(state, message) {\n        _assertClass(state, SyncState);\n        const ret = wasm.automerge_receiveSyncMessage(this.__wbg_ptr, state.__wbg_ptr, message);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {SyncState} state\n     * @returns {SyncMessage | null}\n     */\n    generateSyncMessage(state) {\n        _assertClass(state, SyncState);\n        const ret = wasm.automerge_generateSyncMessage(this.__wbg_ptr, state.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {any} meta\n     * @returns {MaterializeValue}\n     */\n    toJS(meta) {\n        const ret = wasm.automerge_toJS(this.__wbg_ptr, meta);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null | undefined} heads\n     * @param {any} meta\n     * @returns {any}\n     */\n    materialize(obj, heads, meta) {\n        const ret = wasm.automerge_materialize(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads), meta);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {any} position\n     * @param {Array<any> | null | undefined} heads\n     * @param {any} move_cursor\n     * @returns {string}\n     */\n    getCursor(obj, position, heads, move_cursor) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ret = wasm.automerge_getCursor(this.__wbg_ptr, obj, position, isLikeNone(heads) ? 0 : addToExternrefTable0(heads), move_cursor);\n            var ptr1 = ret[0];\n            var len1 = ret[1];\n            if (ret[3]) {\n                ptr1 = 0; len1 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {any} cursor\n     * @param {Array<any> | null} [heads]\n     * @returns {number}\n     */\n    getCursorPosition(obj, cursor, heads) {\n        const ret = wasm.automerge_getCursorPosition(this.__wbg_ptr, obj, cursor, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return ret[0];\n    }\n    /**\n     * @param {string | null} [message]\n     * @param {number | null} [time]\n     * @returns {Hash}\n     */\n    emptyChange(message, time) {\n        var ptr0 = isLikeNone(message) ? 0 : passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.automerge_emptyChange(this.__wbg_ptr, ptr0, len0, !isLikeNone(time), isLikeNone(time) ? 0 : time);\n        return ret;\n    }\n    /**\n     * @param {any} obj\n     * @param {any} range\n     * @param {any} name\n     * @param {any} value\n     * @param {any} datatype\n     */\n    mark(obj, range, name, value, datatype) {\n        const ret = wasm.automerge_mark(this.__wbg_ptr, obj, range, name, value, datatype);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {ObjID} obj\n     * @param {MarkRange} range\n     * @param {string} name\n     */\n    unmark(obj, range, name) {\n        const ret = wasm.automerge_unmark(this.__wbg_ptr, obj, range, name);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {any} obj\n     * @param {Array<any> | null} [heads]\n     * @returns {any}\n     */\n    marks(obj, heads) {\n        const ret = wasm.automerge_marks(this.__wbg_ptr, obj, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {any} obj\n     * @param {number} index\n     * @param {Array<any> | null} [heads]\n     * @returns {object}\n     */\n    marksAt(obj, index, heads) {\n        const ret = wasm.automerge_marksAt(this.__wbg_ptr, obj, index, isLikeNone(heads) ? 0 : addToExternrefTable0(heads));\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {SyncState} state\n     * @returns {boolean}\n     */\n    hasOurChanges(state) {\n        _assertClass(state, SyncState);\n        const ret = wasm.automerge_hasOurChanges(this.__wbg_ptr, state.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n     * @returns {Hash[]}\n     */\n    topoHistoryTraversal() {\n        const ret = wasm.automerge_topoHistoryTraversal(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Stats}\n     */\n    stats() {\n        const ret = wasm.automerge_stats(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {any} hashes\n     * @returns {Uint8Array}\n     */\n    saveBundle(hashes) {\n        const ret = wasm.automerge_saveBundle(this.__wbg_ptr, hashes);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n}\nif (Symbol.dispose) Automerge.prototype[Symbol.dispose] = Automerge.prototype.free;\n\nconst SyncStateFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_syncstate_free(ptr >>> 0, 1));\n\nexport class SyncState {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(SyncState.prototype);\n        obj.__wbg_ptr = ptr;\n        SyncStateFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        SyncStateFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_syncstate_free(ptr, 0);\n    }\n    /**\n     * @returns {Heads}\n     */\n    get sharedHeads() {\n        const ret = wasm.syncstate_sharedHeads(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @returns {Heads}\n     */\n    get lastSentHeads() {\n        const ret = wasm.syncstate_lastSentHeads(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {Heads} heads\n     */\n    set lastSentHeads(heads) {\n        const ret = wasm.syncstate_set_lastSentHeads(this.__wbg_ptr, heads);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {Heads} hashes\n     */\n    set sentHashes(hashes) {\n        const ret = wasm.syncstate_set_sentHashes(this.__wbg_ptr, hashes);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @returns {SyncState}\n     */\n    clone() {\n        const ret = wasm.syncstate_clone(this.__wbg_ptr);\n        return SyncState.__wrap(ret);\n    }\n}\nif (Symbol.dispose) SyncState.prototype[Symbol.dispose] = SyncState.prototype.free;\n\nexport function __wbg_BigInt_6adbfd8eb0f7ec07(arg0) {\n    const ret = BigInt(arg0);\n    return ret;\n};\n\nexport function __wbg_Error_e17e777aac105295(arg0, arg1) {\n    const ret = Error(getStringFromWasm0(arg0, arg1));\n    return ret;\n};\n\nexport function __wbg_String_8f0eb39a4a4c2f66(arg0, arg1) {\n    const ret = String(arg1);\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbg_apply_55d63d092a912d6f() { return handleError(function (arg0, arg1, arg2) {\n    const ret = Reflect.apply(arg0, arg1, arg2);\n    return ret;\n}, arguments) };\n\nexport function __wbg_assign_66f7942767cba7e3(arg0, arg1) {\n    const ret = Object.assign(arg0, arg1);\n    return ret;\n};\n\nexport function __wbg_call_13410aac570ffff7() { return handleError(function (arg0, arg1) {\n    const ret = arg0.call(arg1);\n    return ret;\n}, arguments) };\n\nexport function __wbg_call_a5400b25a865cfd8() { return handleError(function (arg0, arg1, arg2) {\n    const ret = arg0.call(arg1, arg2);\n    return ret;\n}, arguments) };\n\nexport function __wbg_concat_4a5e81410543b8f3(arg0, arg1) {\n    const ret = arg0.concat(arg1);\n    return ret;\n};\n\nexport function __wbg_defineProperty_1afba89a75bc184f(arg0, arg1, arg2) {\n    const ret = Object.defineProperty(arg0, arg1, arg2);\n    return ret;\n};\n\nexport function __wbg_deleteProperty_5fe99f4fd0f66ebe() { return handleError(function (arg0, arg1) {\n    const ret = Reflect.deleteProperty(arg0, arg1);\n    return ret;\n}, arguments) };\n\nexport function __wbg_done_75ed0ee6dd243d9d(arg0) {\n    const ret = arg0.done;\n    return ret;\n};\n\nexport function __wbg_entries_2be2f15bd5554996(arg0) {\n    const ret = Object.entries(arg0);\n    return ret;\n};\n\nexport function __wbg_error_7534b8e9a36f1ab4(arg0, arg1) {\n    let deferred0_0;\n    let deferred0_1;\n    try {\n        deferred0_0 = arg0;\n        deferred0_1 = arg1;\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n    }\n};\n\nexport function __wbg_for_fbb1cf47b8d6b3f6(arg0, arg1) {\n    const ret = Symbol.for(getStringFromWasm0(arg0, arg1));\n    return ret;\n};\n\nexport function __wbg_freeze_881cf93497533f9e(arg0) {\n    const ret = Object.freeze(arg0);\n    return ret;\n};\n\nexport function __wbg_from_88bc52ce20ba6318(arg0) {\n    const ret = Array.from(arg0);\n    return ret;\n};\n\nexport function __wbg_getRandomValues_1c61fac11405ffdc() { return handleError(function (arg0, arg1) {\n    globalThis.crypto.getRandomValues(getArrayU8FromWasm0(arg0, arg1));\n}, arguments) };\n\nexport function __wbg_getTime_6bb3f64e0f18f817(arg0) {\n    const ret = arg0.getTime();\n    return ret;\n};\n\nexport function __wbg_get_0da715ceaecea5c8(arg0, arg1) {\n    const ret = arg0[arg1 >>> 0];\n    return ret;\n};\n\nexport function __wbg_get_458e874b43b18b25() { return handleError(function (arg0, arg1) {\n    const ret = Reflect.get(arg0, arg1);\n    return ret;\n}, arguments) };\n\nexport function __wbg_instanceof_ArrayBuffer_67f3012529f6a2dd(arg0) {\n    let result;\n    try {\n        result = arg0 instanceof ArrayBuffer;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_instanceof_Date_c0cdff0c3b978b0e(arg0) {\n    let result;\n    try {\n        result = arg0 instanceof Date;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_instanceof_Object_fbf5fef4952ff29b(arg0) {\n    let result;\n    try {\n        result = arg0 instanceof Object;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_instanceof_Uint8Array_9a8378d955933db7(arg0) {\n    let result;\n    try {\n        result = arg0 instanceof Uint8Array;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_isArray_030cce220591fb41(arg0) {\n    const ret = Array.isArray(arg0);\n    return ret;\n};\n\nexport function __wbg_isArray_52653600d4b65388(arg0) {\n    const ret = Array.isArray(arg0);\n    return ret;\n};\n\nexport function __wbg_iterator_f370b34483c71a1c() {\n    const ret = Symbol.iterator;\n    return ret;\n};\n\nexport function __wbg_keys_ef52390b2ae0e714(arg0) {\n    const ret = Object.keys(arg0);\n    return ret;\n};\n\nexport function __wbg_length_186546c51cd61acd(arg0) {\n    const ret = arg0.length;\n    return ret;\n};\n\nexport function __wbg_length_6bb7e81f9d7713e4(arg0) {\n    const ret = arg0.length;\n    return ret;\n};\n\nexport function __wbg_length_9d771c54845e987f(arg0) {\n    const ret = arg0.length;\n    return ret;\n};\n\nexport function __wbg_log_6c7b5f4f00b8ce3f(arg0) {\n    console.log(arg0);\n};\n\nexport function __wbg_log_7917fde260a8fd39(arg0, arg1) {\n    console.log(arg0, arg1);\n};\n\nexport function __wbg_new_19c25a3f2fa63a02() {\n    const ret = new Object();\n    return ret;\n};\n\nexport function __wbg_new_1f3a344cf3123716() {\n    const ret = new Array();\n    return ret;\n};\n\nexport function __wbg_new_5a2ae4557f92b50e(arg0) {\n    const ret = new Date(arg0);\n    return ret;\n};\n\nexport function __wbg_new_638ebfaedbf32a5e(arg0) {\n    const ret = new Uint8Array(arg0);\n    return ret;\n};\n\nexport function __wbg_new_8a6f238a6ece86ea() {\n    const ret = new Error();\n    return ret;\n};\n\nexport function __wbg_new_da9dc54c5db29dfa(arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return ret;\n};\n\nexport function __wbg_new_ef4f9056d946f38b(arg0, arg1) {\n    const ret = new RangeError(getStringFromWasm0(arg0, arg1));\n    return ret;\n};\n\nexport function __wbg_newfromslice_074c56947bd43469(arg0, arg1) {\n    const ret = new Uint8Array(getArrayU8FromWasm0(arg0, arg1));\n    return ret;\n};\n\nexport function __wbg_next_5b3530e612fde77d(arg0) {\n    const ret = arg0.next;\n    return ret;\n};\n\nexport function __wbg_next_692e82279131b03c() { return handleError(function (arg0) {\n    const ret = arg0.next();\n    return ret;\n}, arguments) };\n\nexport function __wbg_ownKeys_36e096e00ffe2676() { return handleError(function (arg0) {\n    const ret = Reflect.ownKeys(arg0);\n    return ret;\n}, arguments) };\n\nexport function __wbg_prototypesetcall_3d4a26c1ed734349(arg0, arg1, arg2) {\n    Uint8Array.prototype.set.call(getArrayU8FromWasm0(arg0, arg1), arg2);\n};\n\nexport function __wbg_push_330b2eb93e4e1212(arg0, arg1) {\n    const ret = arg0.push(arg1);\n    return ret;\n};\n\nexport function __wbg_set_3f1d0b984ed272ed(arg0, arg1, arg2) {\n    arg0[arg1] = arg2;\n};\n\nexport function __wbg_set_453345bcda80b89a() { return handleError(function (arg0, arg1, arg2) {\n    const ret = Reflect.set(arg0, arg1, arg2);\n    return ret;\n}, arguments) };\n\nexport function __wbg_set_90f6c0f7bd8c0415(arg0, arg1, arg2) {\n    arg0[arg1 >>> 0] = arg2;\n};\n\nexport function __wbg_slice_974daea329f5c01d(arg0, arg1, arg2) {\n    const ret = arg0.slice(arg1 >>> 0, arg2 >>> 0);\n    return ret;\n};\n\nexport function __wbg_stack_0ed75d68575b0f3c(arg0, arg1) {\n    const ret = arg1.stack;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbg_stringify_4a34a65f0d4e236f(arg0, arg1) {\n    const ret = JSON.stringify(arg1);\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbg_toString_1f1286a7a97689fe(arg0, arg1, arg2) {\n    const ret = arg1.toString(arg2);\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbg_toString_7268338f40012a03() { return handleError(function (arg0, arg1) {\n    const ret = arg0.toString(arg1);\n    return ret;\n}, arguments) };\n\nexport function __wbg_toString_ea9a6b07f936eb86(arg0) {\n    const ret = arg0.toString();\n    return ret;\n};\n\nexport function __wbg_unshift_18d353edeebf9a72(arg0, arg1) {\n    const ret = arg0.unshift(arg1);\n    return ret;\n};\n\nexport function __wbg_value_dd9372230531eade(arg0) {\n    const ret = arg0.value;\n    return ret;\n};\n\nexport function __wbg_values_a574c29011369bea(arg0) {\n    const ret = Object.values(arg0);\n    return ret;\n};\n\nexport function __wbg_wbindgenbooleanget_3fe6f642c7d97746(arg0) {\n    const v = arg0;\n    const ret = typeof(v) === 'boolean' ? v : undefined;\n    return isLikeNone(ret) ? 0xFFFFFF : ret ? 1 : 0;\n};\n\nexport function __wbg_wbindgendebugstring_99ef257a3ddda34d(arg0, arg1) {\n    const ret = debugString(arg1);\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbg_wbindgengt_5d4c5d18810de162(arg0, arg1) {\n    const ret = arg0 > arg1;\n    return ret;\n};\n\nexport function __wbg_wbindgenisbigint_ecb90cc08a5a9154(arg0) {\n    const ret = typeof(arg0) === 'bigint';\n    return ret;\n};\n\nexport function __wbg_wbindgenisfunction_8cee7dce3725ae74(arg0) {\n    const ret = typeof(arg0) === 'function';\n    return ret;\n};\n\nexport function __wbg_wbindgenisnull_f3037694abe4d97a(arg0) {\n    const ret = arg0 === null;\n    return ret;\n};\n\nexport function __wbg_wbindgenisobject_307a53c6bd97fbf8(arg0) {\n    const val = arg0;\n    const ret = typeof(val) === 'object' && val !== null;\n    return ret;\n};\n\nexport function __wbg_wbindgenisstring_d4fa939789f003b0(arg0) {\n    const ret = typeof(arg0) === 'string';\n    return ret;\n};\n\nexport function __wbg_wbindgenisundefined_c4b71d073b92f3c5(arg0) {\n    const ret = arg0 === undefined;\n    return ret;\n};\n\nexport function __wbg_wbindgenjsvallooseeq_9bec8c9be826bed1(arg0, arg1) {\n    const ret = arg0 == arg1;\n    return ret;\n};\n\nexport function __wbg_wbindgenlt_544155a2b3097bd5(arg0, arg1) {\n    const ret = arg0 < arg1;\n    return ret;\n};\n\nexport function __wbg_wbindgenneg_3577d8a6fd6fd98b(arg0) {\n    const ret = -arg0;\n    return ret;\n};\n\nexport function __wbg_wbindgennumberget_f74b4c7525ac05cb(arg0, arg1) {\n    const obj = arg1;\n    const ret = typeof(obj) === 'number' ? obj : undefined;\n    getDataViewMemory0().setFloat64(arg0 + 8 * 1, isLikeNone(ret) ? 0 : ret, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n};\n\nexport function __wbg_wbindgenstringget_0f16a6ddddef376f(arg0, arg1) {\n    const obj = arg1;\n    const ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbg_wbindgenthrow_451ec1a8469d7eb6(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_cast_2241b6af4c4b2941(arg0, arg1) {\n    // Cast intrinsic for `Ref(String) -> Externref`.\n    const ret = getStringFromWasm0(arg0, arg1);\n    return ret;\n};\n\nexport function __wbindgen_cast_4625c577ab2ec9ee(arg0) {\n    // Cast intrinsic for `U64 -> Externref`.\n    const ret = BigInt.asUintN(64, arg0);\n    return ret;\n};\n\nexport function __wbindgen_cast_9ae0607507abb057(arg0) {\n    // Cast intrinsic for `I64 -> Externref`.\n    const ret = arg0;\n    return ret;\n};\n\nexport function __wbindgen_cast_d6cd19b81560fd6e(arg0) {\n    // Cast intrinsic for `F64 -> Externref`.\n    const ret = arg0;\n    return ret;\n};\n\nexport function __wbindgen_init_externref_table() {\n    const table = wasm.__wbindgen_export_4;\n    const offset = table.grow(4);\n    table.set(0, undefined);\n    table.set(offset + 0, undefined);\n    table.set(offset + 1, null);\n    table.set(offset + 2, true);\n    table.set(offset + 3, false);\n    ;\n};\n\n", "var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isImmutableString, rootProxy } from \"./proxies.js\";\nexport { isImmutableString, isCounter } from \"./proxies.js\";\nimport { STATE } from \"./constants.js\";\nimport { Counter, } from \"./types.js\";\nexport { Counter, Int, Uint, Float64, } from \"./types.js\";\nconst _SyncStateSymbol = Symbol(\"_syncstate\");\nimport { ApiHandler, UseApi } from \"./low_level.js\";\nexport { initializeWasm, initializeBase64Wasm, wasmInitialized, isWasmInitialized, } from \"./low_level.js\";\nimport { ImmutableString } from \"./immutable_string.js\";\nexport { ImmutableString } from \"./immutable_string.js\";\nimport { _state, _is_proxy, _clear_cache, _trace, _obj, } from \"./internal_state.js\";\nexport { applyPatch, applyPatches } from \"./apply_patches.js\";\nimport { conflictAt } from \"./conflicts.js\";\n/**\n * Function for use in {@link change} which inserts values into a list at a given index\n * @param list\n * @param index\n * @param values\n */\nexport function insertAt(list, index, ...values) {\n    if (!_is_proxy(list)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    //eslint-disable-next-line no-extra-semi\n    ;\n    list.insertAt(index, ...values);\n}\n/**\n * Function for use in {@link change} which deletes values from a list at a given index\n * @param list\n * @param index\n * @param numDelete\n */\nexport function deleteAt(list, index, numDelete) {\n    if (!_is_proxy(list)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    //eslint-disable-next-line no-extra-semi\n    ;\n    list.deleteAt(index, numDelete);\n}\n/** @hidden **/\nexport function use(api) {\n    UseApi(api);\n}\n/** @hidden */\nexport function getBackend(doc) {\n    return _state(doc).handle;\n}\nfunction importOpts(_actor) {\n    if (typeof _actor === \"object\") {\n        return _actor;\n    }\n    else {\n        return { actor: _actor };\n    }\n}\nexport function getChangesSince(state, heads) {\n    const n = _state(state);\n    return n.handle.getChanges(heads);\n}\nexport function getChangesMetaSince(state, heads) {\n    const n = _state(state);\n    return n.handle.getChangesMeta(heads);\n}\nfunction cursorToIndex(state, value, index) {\n    if (typeof index == \"string\") {\n        if (/^-?[0-9]+@[0-9a-zA-Z]+$|^[se]$/.test(index)) {\n            return state.handle.getCursorPosition(value, index);\n        }\n        else {\n            throw new RangeError(\"index must be a number or cursor\");\n        }\n    }\n    else {\n        return index;\n    }\n}\n/**\n * Create a new automerge document\n *\n * @typeParam T - The type of value contained in the document. This will be the\n *     type that is passed to the change closure in {@link change}\n * @param _opts - Either an actorId or an {@link InitOptions} (which may\n *     contain an actorId). If this is null the document will be initialised with a\n *     random actor ID\n */\nexport function init(_opts) {\n    const opts = importOpts(_opts);\n    const freeze = !!opts.freeze;\n    const patchCallback = opts.patchCallback;\n    const actor = opts.actor;\n    const handle = ApiHandler.create({ actor });\n    handle.enableFreeze(!!opts.freeze);\n    registerDatatypes(handle);\n    const doc = handle.materialize(\"/\", undefined, {\n        handle,\n        heads: undefined,\n        freeze,\n        patchCallback,\n    });\n    return doc;\n}\n/**\n * Make an immutable view of an automerge document as at `heads`\n *\n * @remarks\n * The document returned from this function cannot be passed to {@link change}.\n * This is because it shares the same underlying memory as `doc`, but it is\n * consequently a very cheap copy.\n *\n * Note that this function will throw an error if any of the hashes in `heads`\n * are not in the document.\n *\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to create a view of\n * @param heads - The hashes of the heads to create a view at\n */\nexport function view(doc, heads) {\n    const state = _state(doc);\n    const handle = state.handle;\n    return state.handle.materialize(\"/\", heads, Object.assign(Object.assign({}, state), { handle,\n        heads }));\n}\n/**\n * Make a full writable copy of an automerge document\n *\n * @remarks\n * Unlike {@link view} this function makes a full copy of the memory backing\n * the document and can thus be passed to {@link change}. It also generates a\n * new actor ID so that changes made in the new document do not create duplicate\n * sequence numbers with respect to the old document. If you need control over\n * the actor ID which is generated you can pass the actor ID as the second\n * argument\n *\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to clone\n * @param _opts - Either an actor ID to use for the new doc or an {@link InitOptions}\n */\nexport function clone(doc, _opts) {\n    const state = _state(doc);\n    const heads = state.heads;\n    const opts = importOpts(_opts);\n    const handle = state.handle.fork(opts.actor, heads);\n    handle.updateDiffCursor();\n    // `change` uses the presence of state.heads to determine if we are in a view\n    // set it to undefined to indicate that this is a full fat document\n    const { heads: _oldHeads } = state, stateSansHeads = __rest(state, [\"heads\"]);\n    stateSansHeads.patchCallback = opts.patchCallback;\n    return handle.applyPatches(doc, Object.assign(Object.assign({}, stateSansHeads), { handle }));\n}\n/** Explicity free the memory backing a document. Note that this is note\n * necessary in environments which support\n * [`FinalizationRegistry`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry)\n */\nexport function free(doc) {\n    return _state(doc).handle.free();\n}\n/**\n * Create an automerge document from a POJO\n *\n * @param initialState - The initial state which will be copied into the document\n * @typeParam T - The type of the value passed to `from` _and_ the type the resulting document will contain\n * @typeParam actor - The actor ID of the resulting document, if this is null a random actor ID will be used\n *\n * @example\n * ```\n * const doc = automerge.from({\n *     tasks: [\n *         {description: \"feed dogs\", done: false}\n *     ]\n * })\n * ```\n */\nexport function from(initialState, _opts) {\n    return _change(init(_opts), \"from\", {}, d => Object.assign(d, initialState))\n        .newDoc;\n}\n/**\n * Update the contents of an automerge document\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to update\n * @param options - Either a message, an {@link ChangeOptions}, or a {@link ChangeFn}\n * @param callback - A `ChangeFn` to be used if `options` was a `string`\n *\n * Note that if the second argument is a function it will be used as the `ChangeFn` regardless of what the third argument is.\n *\n * @example A simple change\n * ```\n * let doc1 = automerge.init()\n * doc1 = automerge.change(doc1, d => {\n *     d.key = \"value\"\n * })\n * assert.equal(doc1.key, \"value\")\n * ```\n *\n * @example A change with a message\n *\n * ```\n * doc1 = automerge.change(doc1, \"add another value\", d => {\n *     d.key2 = \"value2\"\n * })\n * ```\n *\n * @example A change with a message and a timestamp\n *\n * ```\n * doc1 = automerge.change(doc1, {message: \"add another value\", time: 1640995200}, d => {\n *     d.key2 = \"value2\"\n * })\n * ```\n *\n * @example responding to a patch callback\n * ```\n * let patchedPath\n * let patchCallback = patch => {\n *    patchedPath = patch.path\n * }\n * doc1 = automerge.change(doc1, {message: \"add another value\", time: 1640995200, patchCallback}, d => {\n *     d.key2 = \"value2\"\n * })\n * assert.equal(patchedPath, [\"key2\"])\n * ```\n */\nexport function change(doc, options, callback) {\n    if (typeof options === \"function\") {\n        return _change(doc, \"change\", {}, options).newDoc;\n    }\n    else if (typeof callback === \"function\") {\n        if (typeof options === \"string\") {\n            options = { message: options };\n        }\n        return _change(doc, \"change\", options, callback).newDoc;\n    }\n    else {\n        throw RangeError(\"Invalid args for change\");\n    }\n}\n/**\n * Make a change to the document as it was at a particular point in history\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to update\n * @param scope - The heads representing the point in history to make the change\n * @param options - Either a message or a {@link ChangeOptions} for the new change\n * @param callback - A `ChangeFn` to be used if `options` was a `string`\n *\n * @remarks\n * This function is similar to {@link change} but allows you to make changes to\n * the document as if it were at a particular point in time. To understand this\n * imagine a document created with the following history:\n *\n * ```ts\n * let doc = automerge.from({..})\n * doc = automerge.change(doc, () => {...})\n *\n * const heads = automerge.getHeads(doc)\n *\n * // fork the document make a change\n * let fork = automerge.fork(doc)\n * fork = automerge.change(fork, () => {...})\n * const headsOnFork = automerge.getHeads(fork)\n *\n * // make a change on the original doc\n * doc = automerge.change(doc, () => {...})\n * const headsOnOriginal = automerge.getHeads(doc)\n *\n * // now merge the changes back to the original document\n * doc = automerge.merge(doc, fork)\n *\n * // The heads of the document will now be (headsOnFork, headsOnOriginal)\n * ```\n *\n * {@link ChangeAt} produces an equivalent history, but without having to\n * create a fork of the document. In particular the `newHeads` field of the\n * returned {@link ChangeAtResult} will be the same as `headsOnFork`.\n *\n * Why would you want this? It's typically used in conjunction with {@link diff}\n * to reconcile state which is managed concurrently with the document. For\n * example, if you have a text editor component which the user is modifying\n * and you can't send the changes to the document synchronously you might follow\n * a workflow like this:\n *\n * * On initialization save the current heads of the document in the text editor state\n * * Every time the user makes a change record the change in the text editor state\n *\n * Now from time to time reconcile the editor state and the document\n * * Load the last saved heads from the text editor state, call them `oldHeads`\n * * Apply all the unreconciled changes to the document using `changeAt(doc, oldHeads, ...)`\n * * Get the diff from the resulting document to the current document using {@link diff}\n *   passing the {@link ChangeAtResult.newHeads} as the `before` argument and the\n *   heads of the entire document as the `after` argument.\n * * Apply the diff to the text editor state\n * * Save the current heads of the document in the text editor state\n */\nexport function changeAt(doc, scope, options, callback) {\n    if (typeof options === \"function\") {\n        return _change(doc, \"changeAt\", {}, options, scope);\n    }\n    else if (typeof callback === \"function\") {\n        if (typeof options === \"string\") {\n            options = { message: options };\n        }\n        return _change(doc, \"changeAt\", options, callback, scope);\n    }\n    else {\n        throw RangeError(\"Invalid args for changeAt\");\n    }\n}\nfunction progressDocument(doc, source, heads, callback) {\n    if (heads == null) {\n        return doc;\n    }\n    const state = _state(doc);\n    const nextState = Object.assign(Object.assign({}, state), { heads: undefined });\n    const { value: nextDoc, patches } = state.handle.applyAndReturnPatches(doc, nextState);\n    if (patches.length > 0) {\n        if (callback != null) {\n            callback(patches, { before: doc, after: nextDoc, source });\n        }\n        const newState = _state(nextDoc);\n        newState.mostRecentPatch = {\n            before: _state(doc).heads,\n            after: newState.handle.getHeads(),\n            patches,\n        };\n    }\n    state.heads = heads;\n    return nextDoc;\n}\nfunction _change(doc, source, options, callback, scope) {\n    if (typeof callback !== \"function\") {\n        throw new RangeError(\"invalid change function\");\n    }\n    const state = _state(doc);\n    if (doc === undefined || state === undefined) {\n        throw new RangeError(\"must be the document root\");\n    }\n    if (state.heads) {\n        throw new RangeError(\"Attempting to change an outdated document.  Use Automerge.clone() if you wish to make a writable copy.\");\n    }\n    if (_is_proxy(doc)) {\n        throw new RangeError(\"Calls to Automerge.change cannot be nested\");\n    }\n    let heads = state.handle.getHeads();\n    if (scope && headsEqual(scope, heads)) {\n        scope = undefined;\n    }\n    if (scope) {\n        state.handle.isolate(scope);\n        heads = scope;\n    }\n    if (!(\"time\" in options)) {\n        options.time = Math.floor(Date.now() / 1000);\n    }\n    try {\n        state.heads = heads;\n        const root = rootProxy(state.handle);\n        callback(root);\n        if (state.handle.pendingOps() === 0) {\n            state.heads = undefined;\n            if (scope) {\n                state.handle.integrate();\n            }\n            return {\n                newDoc: doc,\n                newHeads: null,\n            };\n        }\n        else {\n            const newHead = state.handle.commit(options.message, options.time);\n            state.handle.integrate();\n            return {\n                newDoc: progressDocument(doc, source, heads, options.patchCallback || state.patchCallback),\n                newHeads: newHead != null ? [newHead] : null,\n            };\n        }\n    }\n    catch (e) {\n        state.heads = undefined;\n        state.handle.rollback();\n        throw e;\n    }\n}\n/**\n * Make a change to a document which does not modify the document\n *\n * @param doc - The doc to add the empty change to\n * @param options - Either a message or a {@link ChangeOptions} for the new change\n *\n * Why would you want to do this? One reason might be that you have merged\n * changes from some other peers and you want to generate a change which\n * depends on those merged changes so that you can sign the new change with all\n * of the merged changes as part of the new change.\n */\nexport function emptyChange(doc, options) {\n    if (options === undefined) {\n        options = {};\n    }\n    if (typeof options === \"string\") {\n        options = { message: options };\n    }\n    if (!(\"time\" in options)) {\n        options.time = Math.floor(Date.now() / 1000);\n    }\n    const state = _state(doc);\n    if (state.heads) {\n        throw new RangeError(\"Attempting to change an outdated document.  Use Automerge.clone() if you wish to make a writable copy.\");\n    }\n    if (_is_proxy(doc)) {\n        throw new RangeError(\"Calls to Automerge.change cannot be nested\");\n    }\n    const heads = state.handle.getHeads();\n    state.handle.emptyChange(options.message, options.time);\n    return progressDocument(doc, \"emptyChange\", heads);\n}\n/**\n * Load an automerge document from a compressed document produce by {@link save}\n *\n * @typeParam T - The type of the value which is contained in the document.\n *                Note that no validation is done to make sure this type is in\n *                fact the type of the contained value so be a bit careful\n * @param data  - The compressed document\n * @param _opts - Either an actor ID or some {@link InitOptions}, if the actor\n *                ID is null a random actor ID will be created\n *\n * Note that `load` will throw an error if passed incomplete content (for\n * example if you are receiving content over the network and don't know if you\n * have the complete document yet). If you need to handle incomplete content use\n * {@link init} followed by {@link loadIncremental}.\n */\nexport function load(data, _opts) {\n    const opts = importOpts(_opts);\n    if (opts.patchCallback) {\n        return loadIncremental(init(opts), data);\n    }\n    const actor = opts.actor;\n    const patchCallback = opts.patchCallback;\n    const unchecked = opts.unchecked || false;\n    const allowMissingDeps = opts.allowMissingChanges || false;\n    const convertImmutableStringsToText = opts.convertImmutableStringsToText || false;\n    const handle = ApiHandler.load(data, {\n        actor,\n        unchecked,\n        allowMissingDeps,\n        convertImmutableStringsToText,\n    });\n    handle.enableFreeze(!!opts.freeze);\n    registerDatatypes(handle);\n    const doc = handle.materialize(\"/\", undefined, {\n        handle,\n        heads: undefined,\n        patchCallback,\n    });\n    return doc;\n}\n/**\n * Load changes produced by {@link saveIncremental}, or partial changes\n *\n * @typeParam T - The type of the value which is contained in the document.\n *                Note that no validation is done to make sure this type is in\n *                fact the type of the contained value so be a bit careful\n * @param data  - The compressedchanges\n * @param opts  - an {@link ApplyOptions}\n *\n * This function is useful when staying up to date with a connected peer.\n * Perhaps the other end sent you a full compresed document which you loaded\n * with {@link load} and they're sending you the result of\n * {@link getLastLocalChange} every time they make a change.\n *\n * Note that this function will succesfully load the results of {@link save} as\n * well as {@link getLastLocalChange} or any other incremental change.\n */\nexport function loadIncremental(doc, data, opts) {\n    if (!opts) {\n        opts = {};\n    }\n    const state = _state(doc);\n    if (state.heads) {\n        throw new RangeError(\"Attempting to change an out of date document - set at: \" + _trace(doc));\n    }\n    if (_is_proxy(doc)) {\n        throw new RangeError(\"Calls to Automerge.change cannot be nested\");\n    }\n    const heads = state.handle.getHeads();\n    state.handle.loadIncremental(data);\n    return progressDocument(doc, \"loadIncremental\", heads, opts.patchCallback || state.patchCallback);\n}\n/**\n * Create binary save data to be appended to a save file or fed into {@link loadIncremental}\n *\n * @typeParam T - The type of the value which is contained in the document.\n *                Note that no validation is done to make sure this type is in\n *                fact the type of the contained value so be a bit careful\n *\n * This function is useful for incrementally saving state.  The data can be appended to a\n * automerge save file, or passed to a document replicating its state.\n *\n */\nexport function saveIncremental(doc) {\n    const state = _state(doc);\n    if (state.heads) {\n        throw new RangeError(\"Attempting to change an out of date document - set at: \" + _trace(doc));\n    }\n    if (_is_proxy(doc)) {\n        throw new RangeError(\"Calls to Automerge.change cannot be nested\");\n    }\n    return state.handle.saveIncremental();\n}\n/**\n * Export the contents of a document to a compressed format\n *\n * @param doc - The doc to save\n *\n * The returned bytes can be passed to {@link load} or {@link loadIncremental}\n */\nexport function save(doc) {\n    return _state(doc).handle.save();\n}\n/**\n * Merge `remote` into `local`\n * @typeParam T - The type of values contained in each document\n * @param local - The document to merge changes into\n * @param remote - The document to merge changes from\n *\n * @returns - The merged document\n *\n * Often when you are merging documents you will also need to clone them. Both\n * arguments to `merge` are frozen after the call so you can no longer call\n * mutating methods (such as {@link change}) on them. The symtom of this will be\n * an error which says \"Attempting to change an out of date document\". To\n * overcome this call {@link clone} on the argument before passing it to {@link\n * merge}.\n */\nexport function merge(local, remote) {\n    const localState = _state(local);\n    if (localState.heads) {\n        throw new RangeError(\"Attempting to change an out of date document - set at: \" + _trace(local));\n    }\n    const heads = localState.handle.getHeads();\n    const remoteState = _state(remote);\n    const changes = localState.handle.getChangesAdded(remoteState.handle);\n    localState.handle.applyChanges(changes);\n    return progressDocument(local, \"merge\", heads, localState.patchCallback);\n}\n/**\n * Get the actor ID associated with the document\n */\nexport function getActorId(doc) {\n    const state = _state(doc);\n    return state.handle.getActorId();\n}\n/**\n * Get the conflicts associated with a property\n *\n * The values of properties in a map in automerge can be conflicted if there\n * are concurrent \"put\" operations to the same key. Automerge chooses one value\n * arbitrarily (but deterministically, any two nodes who have the same set of\n * changes will choose the same value) from the set of conflicting values to\n * present as the value of the key.\n *\n * Sometimes you may want to examine these conflicts, in this case you can use\n * {@link getConflicts} to get the conflicts for the key.\n *\n * @example\n * ```\n * import * as automerge from \"@automerge/automerge\"\n *\n * type Profile = {\n *     pets: Array<{name: string, type: string}>\n * }\n *\n * let doc1 = automerge.init<Profile>(\"aaaa\")\n * doc1 = automerge.change(doc1, d => {\n *     d.pets = [{name: \"Lassie\", type: \"dog\"}]\n * })\n * let doc2 = automerge.init<Profile>(\"bbbb\")\n * doc2 = automerge.merge(doc2, automerge.clone(doc1))\n *\n * doc2 = automerge.change(doc2, d => {\n *     d.pets[0].name = \"Beethoven\"\n * })\n *\n * doc1 = automerge.change(doc1, d => {\n *     d.pets[0].name = \"Babe\"\n * })\n *\n * const doc3 = automerge.merge(doc1, doc2)\n *\n * // Note that here we pass `doc3.pets`, not `doc3`\n * let conflicts = automerge.getConflicts(doc3.pets[0], \"name\")\n *\n * // The two conflicting values are the keys of the conflicts object\n * assert.deepEqual(Object.values(conflicts), [\"Babe\", Beethoven\"])\n * ```\n */\nexport function getConflicts(doc, prop) {\n    const state = _state(doc, false);\n    const objectId = _obj(doc);\n    if (objectId != null) {\n        const withinChangeCallback = _is_proxy(doc);\n        return conflictAt(state.handle, objectId, prop, withinChangeCallback);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Get the binary representation of the last change which was made to this doc\n *\n * This is most useful when staying in sync with other peers, every time you\n * make a change locally via {@link change} you immediately call {@link\n * getLastLocalChange} and send the result over the network to other peers.\n */\nexport function getLastLocalChange(doc) {\n    const state = _state(doc);\n    return state.handle.getLastLocalChange() || undefined;\n}\n/**\n * Return the object ID of an arbitrary javascript value\n *\n * This is useful to determine if something is actually an automerge document,\n * if `doc` is not an automerge document this will return null.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getObjectId(doc, prop) {\n    if (prop) {\n        const state = _state(doc, false);\n        const objectId = _obj(doc);\n        if (!state || !objectId) {\n            return null;\n        }\n        return state.handle.get(objectId, prop);\n    }\n    else {\n        return _obj(doc);\n    }\n}\n/**\n * Get the changes which are in `newState` but not in `oldState`. The returned\n * changes can be loaded in `oldState` via {@link applyChanges}.\n *\n * Note that this will crash if there are changes in `oldState` which are not in `newState`.\n */\nexport function getChanges(oldState, newState) {\n    const n = _state(newState);\n    return n.handle.getChanges(getHeads(oldState));\n}\n/**\n * Get all the changes in a document\n *\n * This is different to {@link save} because the output is an array of changes\n * which can be individually applied via {@link applyChanges}`\n *\n */\nexport function getAllChanges(doc) {\n    const state = _state(doc);\n    return state.handle.getChanges([]);\n}\n/**\n * Apply changes received from another document\n *\n * `doc` will be updated to reflect the `changes`. If there are changes which\n * we do not have dependencies for yet those will be stored in the document and\n * applied when the depended on changes arrive.\n *\n * You can use the {@link ApplyOptions} to pass a patchcallback which will be\n * informed of any changes which occur as a result of applying the changes\n *\n */\nexport function applyChanges(doc, changes, opts) {\n    const state = _state(doc);\n    if (!opts) {\n        opts = {};\n    }\n    if (state.heads) {\n        throw new RangeError(\"Attempting to change an outdated document.  Use Automerge.clone() if you wish to make a writable copy.\");\n    }\n    if (_is_proxy(doc)) {\n        throw new RangeError(\"Calls to Automerge.change cannot be nested\");\n    }\n    const heads = state.handle.getHeads();\n    state.handle.applyChanges(changes);\n    state.heads = heads;\n    return [\n        progressDocument(doc, \"applyChanges\", heads, opts.patchCallback || state.patchCallback),\n    ];\n}\n/** @hidden */\nexport function getHistory(doc) {\n    const history = getAllChanges(doc);\n    return history.map((change, index) => ({\n        get change() {\n            return decodeChange(change);\n        },\n        get snapshot() {\n            const [state] = applyChanges(init(), history.slice(0, index + 1));\n            return state;\n        },\n    }));\n}\n/**\n * Create a set of patches representing the change from one set of heads to another\n *\n * If either of the heads are missing from the document the returned set of patches will be empty\n */\nexport function diff(doc, before, after) {\n    checkHeads(before, \"before\");\n    checkHeads(after, \"after\");\n    const state = _state(doc);\n    if (state.mostRecentPatch &&\n        equals(state.mostRecentPatch.before, before) &&\n        equals(state.mostRecentPatch.after, after)) {\n        return state.mostRecentPatch.patches;\n    }\n    return state.handle.diff(before, after);\n}\nfunction headsEqual(heads1, heads2) {\n    if (heads1.length !== heads2.length) {\n        return false;\n    }\n    for (let i = 0; i < heads1.length; i++) {\n        if (heads1[i] !== heads2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction checkHeads(heads, fieldname) {\n    if (!Array.isArray(heads)) {\n        throw new Error(`${fieldname} must be an array`);\n    }\n}\n/** @hidden */\n// FIXME : no tests\n// FIXME can we just use deep equals now?\nexport function equals(val1, val2) {\n    if (!isObject(val1) || !isObject(val2))\n        return val1 === val2;\n    const keys1 = Object.keys(val1).sort(), keys2 = Object.keys(val2).sort();\n    if (keys1.length !== keys2.length)\n        return false;\n    for (let i = 0; i < keys1.length; i++) {\n        if (keys1[i] !== keys2[i])\n            return false;\n        if (!equals(val1[keys1[i]], val2[keys2[i]]))\n            return false;\n    }\n    return true;\n}\n/**\n * encode a {@link SyncState} into binary to send over the network\n *\n * @group sync\n * */\nexport function encodeSyncState(state) {\n    const sync = ApiHandler.importSyncState(state);\n    const result = ApiHandler.encodeSyncState(sync);\n    sync.free();\n    return result;\n}\n/**\n * Decode some binary data into a {@link SyncState}\n *\n * @group sync\n */\nexport function decodeSyncState(state) {\n    const sync = ApiHandler.decodeSyncState(state);\n    const result = ApiHandler.exportSyncState(sync);\n    sync.free();\n    return result;\n}\n/**\n * Generate a sync message to send to the peer represented by `inState`\n * @param doc - The doc to generate messages about\n * @param inState - The {@link SyncState} representing the peer we are talking to\n *\n * @group sync\n *\n * @returns An array of `[newSyncState, syncMessage | null]` where\n * `newSyncState` should replace `inState` and `syncMessage` should be sent to\n * the peer if it is not null. If `syncMessage` is null then we are up to date.\n */\nexport function generateSyncMessage(doc, inState) {\n    const state = _state(doc);\n    const syncState = ApiHandler.importSyncState(inState);\n    const message = state.handle.generateSyncMessage(syncState);\n    const outState = ApiHandler.exportSyncState(syncState);\n    return [outState, message];\n}\n/**\n * Update a document and our sync state on receiving a sync message\n *\n * @group sync\n *\n * @param doc     - The doc the sync message is about\n * @param inState - The {@link SyncState} for the peer we are communicating with\n * @param message - The message which was received\n * @param opts    - Any {@link ApplyOption}s, used for passing a\n *                  {@link PatchCallback} which will be informed of any changes\n *                  in `doc` which occur because of the received sync message.\n *\n * @returns An array of `[newDoc, newSyncState, null]` where\n * `newDoc` is the updated state of `doc`, `newSyncState` should replace\n * `inState`.\n *\n * @remarks Note that this function has three return values for legacy reasons.\n * The third value used to be a sync message to send back but this is now\n * always null and you should instead call `generateSyncMessage` after calling\n * `receiveSyncMessage` to see if there are new messages to send.\n */\nexport function receiveSyncMessage(doc, inState, message, opts) {\n    const syncState = ApiHandler.importSyncState(inState);\n    if (!opts) {\n        opts = {};\n    }\n    const state = _state(doc);\n    if (state.heads) {\n        throw new RangeError(\"Attempting to change an outdated document.  Use Automerge.clone() if you wish to make a writable copy.\");\n    }\n    if (_is_proxy(doc)) {\n        throw new RangeError(\"Calls to Automerge.change cannot be nested\");\n    }\n    const heads = state.handle.getHeads();\n    state.handle.receiveSyncMessage(syncState, message);\n    const outSyncState = ApiHandler.exportSyncState(syncState);\n    return [\n        progressDocument(doc, \"receiveSyncMessage\", heads, opts.patchCallback || state.patchCallback),\n        outSyncState,\n        null,\n    ];\n}\n/**\n * Check whether the replica represented by `remoteState` has all our changes\n *\n * @param doc - The doc to check whether the remote has changes for\n * @param remoteState - The {@link SyncState} representing the peer we are talking to\n *\n * @group sync\n *\n * @returns true if the remote has all of our changes\n */\nexport function hasOurChanges(doc, remoteState) {\n    const state = _state(doc);\n    const syncState = ApiHandler.importSyncState(remoteState);\n    return state.handle.hasOurChanges(syncState);\n}\n/**\n * Create a new, blank {@link SyncState}\n *\n * When communicating with a peer for the first time use this to generate a new\n * {@link SyncState} for them\n *\n * @group sync\n */\nexport function initSyncState() {\n    return ApiHandler.exportSyncState(ApiHandler.initSyncState());\n}\n/** @hidden */\nexport function encodeChange(change) {\n    return ApiHandler.encodeChange(change);\n}\n/** @hidden */\nexport function decodeChange(data) {\n    return ApiHandler.decodeChange(data);\n}\n/** @hidden */\nexport function encodeSyncMessage(message) {\n    return ApiHandler.encodeSyncMessage(message);\n}\n/** @hidden */\nexport function decodeSyncMessage(message) {\n    return ApiHandler.decodeSyncMessage(message);\n}\n/**\n * Get any changes in `doc` which are not dependencies of `heads`\n */\nexport function getMissingDeps(doc, heads) {\n    const state = _state(doc);\n    return state.handle.getMissingDeps(heads);\n}\n/**\n * Get the hashes of the heads of this document\n */\nexport function getHeads(doc) {\n    const state = _state(doc);\n    return state.heads || state.handle.getHeads();\n}\n/** @hidden */\nexport function dump(doc) {\n    const state = _state(doc);\n    state.handle.dump();\n}\n/** @hidden */\nexport function toJS(doc) {\n    const state = _state(doc);\n    const enabled = state.handle.enableFreeze(false);\n    const result = state.handle.materialize(\"/\", state.heads);\n    state.handle.enableFreeze(enabled);\n    return result;\n}\nexport function isAutomerge(doc) {\n    if (typeof doc == \"object\" && doc !== null) {\n        return getObjectId(doc) === \"_root\" && !!Reflect.get(doc, STATE);\n    }\n    else {\n        return false;\n    }\n}\nfunction isObject(obj) {\n    return typeof obj === \"object\" && obj !== null;\n}\nexport function saveSince(doc, heads) {\n    const state = _state(doc);\n    const result = state.handle.saveSince(heads);\n    return result;\n}\n/**\n * Returns true if the document has all of the given heads somewhere in its history\n */\nexport function hasHeads(doc, heads) {\n    const state = _state(doc);\n    for (const hash of heads) {\n        if (!state.handle.getChangeByHash(hash)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction registerDatatypes(handle) {\n    handle.registerDatatype(\"counter\", (n) => new Counter(n), n => {\n        if (n instanceof Counter) {\n            return n.value;\n        }\n    });\n    handle.registerDatatype(\"str\", (n) => {\n        return new ImmutableString(n);\n    }, s => {\n        if (isImmutableString(s)) {\n            return s.val;\n        }\n    });\n}\n/**\n * @hidden\n */\nexport function topoHistoryTraversal(doc) {\n    const state = _state(doc);\n    return state.handle.topoHistoryTraversal();\n}\n/**\n * Decode a change hash into the details of this change\n *\n * This should be considered a semi-stable API. We try not to change the\n * encoding in backwards incompatible ways but we won't bump a major version if\n * we do have to change it\n */\nexport function inspectChange(doc, changeHash) {\n    const state = _state(doc);\n    return state.handle.getDecodedChangeByHash(changeHash);\n}\n/**\n * Return some internal statistics about the document\n */\nexport function stats(doc) {\n    const state = _state(doc);\n    return state.handle.stats();\n}\n/**\n * Modify a string\n *\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to modify\n * @param path - The path to the string to modify\n * @param index - The position (as a {@link Cursor} or index) to edit.\n *   If a cursor is used then the edit happens such that the cursor will\n *   now point to the end of the newText, so you can continue to reuse\n *   the same cursor for multiple calls to splice.\n * @param del - The number of code units to delete, a positive number\n *   deletes N characters after the cursor, a negative number deletes\n *   N characters before the cursor.\n * @param newText - The string to insert (if any).\n */\nexport function splice(doc, path, index, del, newText) {\n    const objPath = absoluteObjPath(doc, path, \"splice\");\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const state = _state(doc, false);\n    _clear_cache(doc);\n    index = cursorToIndex(state, objPath, index);\n    try {\n        return state.handle.splice(objPath, index, del, newText);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot splice: ${e}`);\n    }\n}\n/**\n * Update the value of a string\n *\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document to modify\n * @param path - The path to the string to modify\n * @param newText - The new text to update the value to\n *\n * @remarks\n * This will calculate a diff between the current value and the new value and\n * then convert that diff into calls to {@link splice}. This will produce results\n * which don't merge as well as directly capturing the user input actions, but\n * sometimes it's not possible to capture user input and this is the best you\n * can do.\n *\n * This is an experimental API and may change in the future.\n *\n * @beta\n */\nexport function updateText(doc, path, newText) {\n    const objPath = absoluteObjPath(doc, path, \"updateText\");\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const state = _state(doc, false);\n    _clear_cache(doc);\n    try {\n        return state.handle.updateText(objPath, newText);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot updateText: ${e}`);\n    }\n}\n/**\n * Return the text + block markers at a given path\n *\n * @remarks\n * Rich text in automerge is represented as a sequence of characters with block\n * markers appearing inline with the text, and inline formatting spans overlaid\n * on the whole sequence. Block markers are normal automerge maps, but they are\n * only visible via either the {@link block} function or the {@link spans}\n * function. This function returns the current state of the spans\n */\nexport function spans(doc, path) {\n    const state = _state(doc, false);\n    const objPath = absoluteObjPath(doc, path, \"spans\");\n    try {\n        return state.handle.spans(objPath, state.heads);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot splice: ${e}`);\n    }\n}\n/**\n * Get the block marker at the given index\n */\nexport function block(doc, path, index) {\n    const objPath = absoluteObjPath(doc, path, \"splitBlock\");\n    const state = _state(doc, false);\n    index = cursorToIndex(state, objPath, index);\n    try {\n        return state.handle.getBlock(objPath, index);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot get block: ${e}`);\n    }\n}\n/**\n * Insert a new block marker at the given index\n */\nexport function splitBlock(doc, path, index, block) {\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const objPath = absoluteObjPath(doc, path, \"splitBlock\");\n    const state = _state(doc, false);\n    _clear_cache(doc);\n    index = cursorToIndex(state, objPath, index);\n    try {\n        state.handle.splitBlock(objPath, index, block);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot splice: ${e}`);\n    }\n}\n/**\n * Delete the block marker at the given index\n */\nexport function joinBlock(doc, path, index) {\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const objPath = absoluteObjPath(doc, path, \"joinBlock\");\n    const state = _state(doc, false);\n    _clear_cache(doc);\n    index = cursorToIndex(state, objPath, index);\n    try {\n        state.handle.joinBlock(objPath, index);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot joinBlock: ${e}`);\n    }\n}\n/**\n * Update the block marker at the given index\n */\nexport function updateBlock(doc, path, index, block) {\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const objPath = absoluteObjPath(doc, path, \"updateBlock\");\n    const state = _state(doc, false);\n    _clear_cache(doc);\n    index = cursorToIndex(state, objPath, index);\n    try {\n        state.handle.updateBlock(objPath, index, block);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot updateBlock: ${e}`);\n    }\n}\n/**\n * Update the spans at the given path\n *\n * @remarks\n * Like {@link updateText} this will diff `newSpans` against the current state\n * of the text at `path` and perform a reasonably minimal number of operations\n * required to update the spans to the new state.\n *\n * When updating spans, we need to know what to set the \"expand\" behavior of\n * newly created marks to. By default we set it to \"both\", meaning that the\n * spans will expand on either, but this can be overridden by passing\n * `{ defaultExpand: \"<expand>\"}` as the final `config` parameter. You\n * can also pass `{perMarkExpand: {\"<markname>\": \"<expand config>\"}` to\n * set the expand configuration for specific marks where it should be\n * different from the default.\n */\nexport function updateSpans(doc, path, newSpans, config) {\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const objPath = absoluteObjPath(doc, path, \"updateSpans\");\n    const state = _state(doc, false);\n    _clear_cache(doc);\n    try {\n        state.handle.updateSpans(objPath, newSpans, config);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot updateSpans: ${e}`);\n    }\n}\n/**\n * Returns a cursor for the given position in a string.\n *\n * @remarks\n * A cursor represents a relative position, \"before character X\",\n * rather than an absolute position. As the document is edited, the\n * cursor remains stable relative to its context, just as you'd expect\n * from a cursor in a concurrent text editor.\n *\n * The string representation is shareable, and so you can use this both\n * to edit the document yourself (using {@link splice}) or to share multiple\n * collaborator's current cursor positions over the network.\n *\n * The cursor's `position` can be an index in the string, `'start'` or `'end'`.\n * - `'start'` ensures this cursor always resolves to `0`\n * - `'end'` ensures this cursor always resolves to `string.length`\n *\n * Start cursors can be created by passing any negative number in `position`.\n *\n * End cursors can be created by passing a number `>= string.length` in `position`.\n *\n * `move` determines the position the cursor resolves to if the character at\n * `index` is removed:\n * - `'after'` causes the cursor to resolve towards `string.length`\n * - `'before'` causes the cursor to resolve towards `0`\n *\n * `move` is `'after'` by default.\n *\n * @typeParam T - The type of the value contained in the document\n * @param doc - The document\n * @param path - The path to the string\n * @param position - The position of the cursor, either an index, `'start'` or `'end'`\n * @param move - The direction the cursor should resolve to, defaults to 'after'\n */\nexport function getCursor(doc, path, position, move) {\n    const objPath = absoluteObjPath(doc, path, \"getCursor\");\n    const state = _state(doc, false);\n    try {\n        return state.handle.getCursor(objPath, position, state.heads, move);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot getCursor: ${e}`);\n    }\n}\n/**\n * Returns the current index of the cursor.\n *\n * @typeParam T - The type of the value contained in the document\n *\n * @param doc - The document\n * @param path - The path to the string\n * @param index - The cursor\n */\nexport function getCursorPosition(doc, path, cursor) {\n    const objPath = absoluteObjPath(doc, path, \"getCursorPosition\");\n    const state = _state(doc, false);\n    try {\n        return state.handle.getCursorPosition(objPath, cursor, state.heads);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot getCursorPosition: ${e}`);\n    }\n}\nexport function mark(doc, path, range, name, value) {\n    const objPath = absoluteObjPath(doc, path, \"mark\");\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const state = _state(doc, false);\n    try {\n        return state.handle.mark(objPath, range, name, value);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot mark: ${e}`);\n    }\n}\nexport function unmark(doc, path, range, name) {\n    const objPath = absoluteObjPath(doc, path, \"unmark\");\n    if (!_is_proxy(doc)) {\n        throw new RangeError(\"object cannot be modified outside of a change block\");\n    }\n    const state = _state(doc, false);\n    try {\n        return state.handle.unmark(objPath, range, name);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot unmark: ${e}`);\n    }\n}\nexport function marks(doc, path) {\n    const objPath = absoluteObjPath(doc, path, \"marks\");\n    const state = _state(doc, false);\n    try {\n        return state.handle.marks(objPath);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot call marks(): ${e}`);\n    }\n}\nexport function marksAt(doc, path, index) {\n    const objPath = absoluteObjPath(doc, path, \"marksAt\");\n    const state = _state(doc, false);\n    try {\n        return state.handle.marksAt(objPath, index);\n    }\n    catch (e) {\n        throw new RangeError(`Cannot call marksAt(): ${e}`);\n    }\n}\nfunction absoluteObjPath(doc, path, functionName) {\n    path = path.slice();\n    const objectId = _obj(doc);\n    if (!objectId) {\n        throw new RangeError(`invalid object for ${functionName}`);\n    }\n    path.unshift(objectId);\n    return path.join(\"/\");\n}\n/**\n * @deprecated This method has been renamed to {@link isImmutableString}\n */\nexport const isRawString = isImmutableString;\n/**\n * @deprecated This type has been renamed to {@link ImmutableString}\n */\nexport const RawString = ImmutableString;\n/**\n * EXPERIMENTAL: save a bundle of changes from a document to an encoded form\n * @experimental\n * @param doc - The document containing the changes to save\n * @param hashes - The hashes of the changes to save to a bundle\n * @returns\n */\nexport function saveBundle(doc, hashes) {\n    const state = _state(doc, false);\n    return state.handle.saveBundle(hashes);\n}\n/**\n * EXPERIMENTAL: Load a bundle of changes to examine them\n * @experimental\n * @param bundle - The encoded bundle to read\n */\nexport function readBundle(bundle) {\n    return ApiHandler.readBundle(bundle);\n}\n", "// Properties of the document root object\nexport const STATE = Symbol.for(\"_am_meta\"); // symbol used to hide application metadata on automerge objects\nexport const TRACE = Symbol.for(\"_am_trace\"); // used for debugging\nexport const OBJECT_ID = Symbol.for(\"_am_objectId\"); // symbol used to hide the object id on automerge objects\nexport const IS_PROXY = Symbol.for(\"_am_isProxy\"); // symbol used to test if the document is a proxy object\nexport const CLEAR_CACHE = Symbol.for(\"_am_clearCache\"); // symbol used to tell a proxy object to clear its cache\nexport const UINT = Symbol.for(\"_am_uint\");\nexport const INT = Symbol.for(\"_am_int\");\nexport const F64 = Symbol.for(\"_am_f64\");\nexport const COUNTER = Symbol.for(\"_am_counter\");\nexport const TEXT = Symbol.for(\"_am_text\");\nexport const IMMUTABLE_STRING = Symbol.for(\"_am_immutableString\");\n", "import { COUNTER } from \"./constants.js\";\n/**\n * The most basic CRDT: an integer value that can be changed only by\n * incrementing and decrementing. Since addition of integers is commutative,\n * the value trivially converges.\n */\nexport class Counter {\n    constructor(value) {\n        this.value = value || 0;\n        Reflect.defineProperty(this, COUNTER, { value: true });\n    }\n    /**\n     * A peculiar JavaScript language feature from its early days: if the object\n     * `x` has a `valueOf()` method that returns a number, you can use numerical\n     * operators on the object `x` directly, such as `x + 1` or `x < 4`.\n     * This method is also called when coercing a value to a string by\n     * concatenating it with another string, as in `x + ''`.\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\n     */\n    valueOf() {\n        return this.value;\n    }\n    /**\n     * Returns the counter value as a decimal string. If `x` is a counter object,\n     * this method is called e.g. when you do `['value: ', x].join('')` or when\n     * you use string interpolation: `value: ${x}`.\n     */\n    toString() {\n        return this.valueOf().toString();\n    }\n    /**\n     * Returns the counter value, so that a JSON serialization of an Automerge\n     * document represents the counter simply as an integer.\n     */\n    toJSON() {\n        return this.value;\n    }\n    /**\n     * Increases the value of the counter by `delta`. If `delta` is not given,\n     * increases the value of the counter by 1.\n     *\n     * Will throw an error if used outside of a change callback.\n     */\n    increment(_delta) {\n        throw new Error(\"Counters should not be incremented outside of a change callback\");\n    }\n    /**\n     * Decreases the value of the counter by `delta`. If `delta` is not given,\n     * decreases the value of the counter by 1.\n     *\n     * Will throw an error if used outside of a change callback.\n     */\n    decrement(_delta) {\n        throw new Error(\"Counters should not be decremented outside of a change callback\");\n    }\n}\n/**\n * An instance of this class is used when a counter is accessed within a change\n * callback.\n */\nclass WriteableCounter extends Counter {\n    constructor(value, context, path, objectId, key) {\n        super(value);\n        this.context = context;\n        this.path = path;\n        this.objectId = objectId;\n        this.key = key;\n    }\n    /**\n     * Increases the value of the counter by `delta`. If `delta` is not given,\n     * increases the value of the counter by 1.\n     */\n    increment(delta) {\n        delta = typeof delta === \"number\" ? delta : 1;\n        this.context.increment(this.objectId, this.key, delta);\n        this.value += delta;\n        return this.value;\n    }\n    /**\n     * Decreases the value of the counter by `delta`. If `delta` is not given,\n     * decreases the value of the counter by 1.\n     */\n    decrement(delta) {\n        return this.increment(typeof delta === \"number\" ? -delta : -1);\n    }\n}\n/**\n * Returns an instance of `WriteableCounter` for use in a change callback.\n * `context` is the proxy context that keeps track of the mutations.\n * `objectId` is the ID of the object containing the counter, and `key` is\n * the property name (key in map, or index in list) where the counter is\n * located.\n */\nexport function getWriteableCounter(value, context, path, objectId, key) {\n    return new WriteableCounter(value, context, path, objectId, key);\n}\n//module.exports = { Counter, getWriteableCounter }\n", "var _a;\nimport { IMMUTABLE_STRING } from \"./constants.js\";\nexport class ImmutableString {\n    constructor(val) {\n        // Used to detect whether a value is a ImmutableString object rather than using an instanceof check\n        this[_a] = true;\n        this.val = val;\n    }\n    /**\n     * Returns the content of the ImmutableString object as a simple string\n     */\n    toString() {\n        return this.val;\n    }\n    toJSON() {\n        return this.val;\n    }\n}\n_a = IMMUTABLE_STRING;\n", "const MAX_I64 = BigInt(\"9223372036854775807\"); // 2n ** 63n - 1n;\nimport { getWriteableCounter } from \"./counter.js\";\nimport { STATE, TRACE, IS_PROXY, OBJECT_ID, CLEAR_CACHE, COUNTER, INT, UINT, F64, IMMUTABLE_STRING, } from \"./constants.js\";\nimport { ImmutableString } from \"./immutable_string.js\";\nfunction parseListIndex(key) {\n    if (typeof key === \"string\" && /^[0-9]+$/.test(key))\n        key = parseInt(key, 10);\n    if (typeof key !== \"number\") {\n        return key;\n    }\n    if (key < 0 || isNaN(key) || key === Infinity || key === -Infinity) {\n        throw new RangeError(\"A list index must be positive, but you passed \" + key);\n    }\n    return key;\n}\nfunction valueAt(target, prop) {\n    const { context, objectId, path } = target;\n    const value = context.getWithType(objectId, prop);\n    if (value === null) {\n        return;\n    }\n    const datatype = value[0];\n    const val = value[1];\n    switch (datatype) {\n        case undefined:\n            return;\n        case \"map\":\n            return mapProxy(context, val, [...path, prop]);\n        case \"list\":\n            return listProxy(context, val, [...path, prop]);\n        case \"text\":\n            return context.text(val);\n        case \"str\":\n            return new ImmutableString(val);\n        case \"uint\":\n            return val;\n        case \"int\":\n            return val;\n        case \"f64\":\n            return val;\n        case \"boolean\":\n            return val;\n        case \"null\":\n            return null;\n        case \"bytes\":\n            return val;\n        case \"timestamp\":\n            return val;\n        case \"counter\": {\n            const counter = getWriteableCounter(val, context, path, objectId, prop);\n            return counter;\n        }\n        default:\n            throw RangeError(`datatype ${datatype} unimplemented`);\n    }\n}\nfunction import_value(value, path, context) {\n    const type = typeof value;\n    switch (type) {\n        case \"object\":\n            if (value == null) {\n                return [null, \"null\"];\n            }\n            else if (value[UINT]) {\n                return [value.value, \"uint\"];\n            }\n            else if (value[INT]) {\n                return [value.value, \"int\"];\n            }\n            else if (value[F64]) {\n                return [value.value, \"f64\"];\n            }\n            else if (value[COUNTER]) {\n                return [value.value, \"counter\"];\n            }\n            else if (value instanceof Date) {\n                return [value.getTime(), \"timestamp\"];\n            }\n            else if (isImmutableString(value)) {\n                return [value.toString(), \"str\"];\n            }\n            else if (value instanceof Uint8Array) {\n                return [value, \"bytes\"];\n            }\n            else if (value instanceof Array) {\n                return [value, \"list\"];\n            }\n            else if (Object.prototype.toString.call(value) === \"[object Object]\") {\n                return [value, \"map\"];\n            }\n            else if (isSameDocument(value, context)) {\n                throw new RangeError(\"Cannot create a reference to an existing document object\");\n            }\n            else {\n                throw new RangeError(`Cannot assign unknown object: ${value}`);\n            }\n        case \"boolean\":\n            return [value, \"boolean\"];\n        case \"bigint\":\n            if (value > MAX_I64) {\n                return [value, \"uint\"];\n            }\n            else {\n                return [value, \"int\"];\n            }\n        case \"number\":\n            if (Number.isInteger(value)) {\n                return [value, \"int\"];\n            }\n            else {\n                return [value, \"f64\"];\n            }\n        case \"string\":\n            return [value, \"text\"];\n        case \"undefined\":\n            throw new RangeError([\n                `Cannot assign undefined value at ${printPath(path)}, `,\n                \"because `undefined` is not a valid JSON data type. \",\n                \"You might consider setting the property's value to `null`, \",\n                \"or using `delete` to remove it altogether.\",\n            ].join(\"\"));\n        default:\n            throw new RangeError([\n                `Cannot assign ${type} value at ${printPath(path)}. `,\n                `All JSON primitive datatypes (object, array, string, number, boolean, null) `,\n                `are supported in an Automerge document; ${type} values are not. `,\n            ].join(\"\"));\n    }\n}\n// When we assign a value to a property in a proxy we recursively walk through\n// the value we are assigning and copy it into the document. This is generally\n// desirable behaviour. However, a very common bug is to accidentally assign a\n// value which is already in the document to another key within the same\n// document, this often leads to surprising behaviour where users expected to\n// _move_ the object, but it is instead copied. To avoid this we check if the\n// value is from the same document and if it is we throw an error, this means\n// we require an explicit Object.assign call to copy the object, thus avoiding\n// the footgun\nfunction isSameDocument(val, context) {\n    var _b, _c;\n    // Date is technically an object, but immutable, so allowing people to assign\n    // a date from one place in the document to another place in the document is\n    // not likely to be a bug\n    if (val instanceof Date) {\n        return false;\n    }\n    // this depends on __wbg_ptr being the wasm pointer\n    // a new version of wasm-bindgen will break this\n    // but the tests should expose the break\n    if (val && ((_c = (_b = val[STATE]) === null || _b === void 0 ? void 0 : _b.handle) === null || _c === void 0 ? void 0 : _c.__wbg_ptr) === context.__wbg_ptr) {\n        return true;\n    }\n    return false;\n}\nconst MapHandler = {\n    get(target, key) {\n        const { context, objectId, cache } = target;\n        if (key === Symbol.toStringTag) {\n            return target[Symbol.toStringTag];\n        }\n        if (key === OBJECT_ID)\n            return objectId;\n        if (key === IS_PROXY)\n            return true;\n        if (key === TRACE)\n            return target.trace;\n        if (key === STATE)\n            return { handle: context };\n        if (!cache[key]) {\n            cache[key] = valueAt(target, key);\n        }\n        return cache[key];\n    },\n    set(target, key, val) {\n        const { context, objectId, path } = target;\n        target.cache = {}; // reset cache on set\n        if (isSameDocument(val, context)) {\n            throw new RangeError(\"Cannot create a reference to an existing document object\");\n        }\n        if (key === TRACE) {\n            target.trace = val;\n            return true;\n        }\n        if (key === CLEAR_CACHE) {\n            return true;\n        }\n        const [value, datatype] = import_value(val, [...path, key], context);\n        switch (datatype) {\n            case \"list\": {\n                const list = context.putObject(objectId, key, []);\n                const proxyList = listProxy(context, list, [...path, key]);\n                for (let i = 0; i < value.length; i++) {\n                    proxyList[i] = value[i];\n                }\n                break;\n            }\n            case \"text\": {\n                context.putObject(objectId, key, value);\n                break;\n            }\n            case \"map\": {\n                const map = context.putObject(objectId, key, {});\n                const proxyMap = mapProxy(context, map, [...path, key]);\n                for (const key in value) {\n                    proxyMap[key] = value[key];\n                }\n                break;\n            }\n            default:\n                context.put(objectId, key, value, datatype);\n        }\n        return true;\n    },\n    deleteProperty(target, key) {\n        const { context, objectId } = target;\n        target.cache = {}; // reset cache on delete\n        context.delete(objectId, key);\n        return true;\n    },\n    has(target, key) {\n        const value = this.get(target, key);\n        return value !== undefined;\n    },\n    getOwnPropertyDescriptor(target, key) {\n        // const { context, objectId } = target\n        const value = this.get(target, key);\n        if (typeof value !== \"undefined\") {\n            return {\n                configurable: true,\n                enumerable: true,\n                value,\n            };\n        }\n    },\n    ownKeys(target) {\n        const { context, objectId } = target;\n        // FIXME - this is a tmp workaround until fix the dupe key bug in keys()\n        const keys = context.keys(objectId);\n        return [...new Set(keys)];\n    },\n};\nconst ListHandler = {\n    get(target, index) {\n        const { context, objectId } = target;\n        index = parseListIndex(index);\n        if (index === Symbol.hasInstance) {\n            return (instance) => {\n                return Array.isArray(instance);\n            };\n        }\n        if (index === Symbol.toStringTag) {\n            return target[Symbol.toStringTag];\n        }\n        if (index === OBJECT_ID)\n            return objectId;\n        if (index === IS_PROXY)\n            return true;\n        if (index === TRACE)\n            return target.trace;\n        if (index === STATE)\n            return { handle: context };\n        if (index === \"length\")\n            return context.length(objectId);\n        if (typeof index === \"number\") {\n            return valueAt(target, index);\n        }\n        else {\n            return listMethods(target)[index];\n        }\n    },\n    set(target, index, val) {\n        const { context, objectId, path } = target;\n        index = parseListIndex(index);\n        if (isSameDocument(val, context)) {\n            throw new RangeError(\"Cannot create a reference to an existing document object\");\n        }\n        if (index === CLEAR_CACHE) {\n            return true;\n        }\n        if (index === TRACE) {\n            target.trace = val;\n            return true;\n        }\n        if (typeof index == \"string\") {\n            throw new RangeError(\"list index must be a number\");\n        }\n        const [value, datatype] = import_value(val, [...path, index], context);\n        switch (datatype) {\n            case \"list\": {\n                let list;\n                if (index >= context.length(objectId)) {\n                    list = context.insertObject(objectId, index, []);\n                }\n                else {\n                    list = context.putObject(objectId, index, []);\n                }\n                const proxyList = listProxy(context, list, [...path, index]);\n                proxyList.splice(0, 0, ...value);\n                break;\n            }\n            case \"text\": {\n                if (index >= context.length(objectId)) {\n                    context.insertObject(objectId, index, value);\n                }\n                else {\n                    context.putObject(objectId, index, value);\n                }\n                break;\n            }\n            case \"map\": {\n                let map;\n                if (index >= context.length(objectId)) {\n                    map = context.insertObject(objectId, index, {});\n                }\n                else {\n                    map = context.putObject(objectId, index, {});\n                }\n                const proxyMap = mapProxy(context, map, [...path, index]);\n                for (const key in value) {\n                    proxyMap[key] = value[key];\n                }\n                break;\n            }\n            default:\n                if (index >= context.length(objectId)) {\n                    context.insert(objectId, index, value, datatype);\n                }\n                else {\n                    context.put(objectId, index, value, datatype);\n                }\n        }\n        return true;\n    },\n    deleteProperty(target, index) {\n        const { context, objectId } = target;\n        index = parseListIndex(index);\n        const elem = context.get(objectId, index);\n        if (elem != null && elem[0] == \"counter\") {\n            throw new TypeError(\"Unsupported operation: deleting a counter from a list\");\n        }\n        context.delete(objectId, index);\n        return true;\n    },\n    has(target, index) {\n        const { context, objectId } = target;\n        index = parseListIndex(index);\n        if (typeof index === \"number\") {\n            return index < context.length(objectId);\n        }\n        return index === \"length\";\n    },\n    getOwnPropertyDescriptor(target, index) {\n        const { context, objectId } = target;\n        if (index === \"length\")\n            return { writable: true, value: context.length(objectId) };\n        if (index === OBJECT_ID)\n            return { configurable: false, enumerable: false, value: objectId };\n        index = parseListIndex(index);\n        const value = valueAt(target, index);\n        return { configurable: true, enumerable: true, value };\n    },\n    getPrototypeOf(target) {\n        return Object.getPrototypeOf(target);\n    },\n    ownKeys( /*target*/) {\n        const keys = [];\n        // uncommenting this causes assert.deepEqual() to fail when comparing to a pojo array\n        // but not uncommenting it causes for (i in list) {} to not enumerate values properly\n        //const {context, objectId } = target\n        //for (let i = 0; i < target.context.length(objectId); i++) { keys.push(i.toString()) }\n        keys.push(\"length\");\n        return keys;\n    },\n};\nexport function mapProxy(context, objectId, path) {\n    const target = {\n        context,\n        objectId,\n        path: path || [],\n        cache: {},\n    };\n    const proxied = {};\n    Object.assign(proxied, target);\n    const result = new Proxy(proxied, MapHandler);\n    // conversion through unknown is necessary because the types are so different\n    return result;\n}\nexport function listProxy(context, objectId, path) {\n    const target = {\n        context,\n        objectId,\n        path: path || [],\n        cache: {},\n    };\n    const proxied = [];\n    Object.assign(proxied, target);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return new Proxy(proxied, ListHandler);\n}\nexport function rootProxy(context) {\n    /* eslint-disable-next-line */\n    return mapProxy(context, \"_root\", []);\n}\nfunction listMethods(target) {\n    const { context, objectId, path } = target;\n    const methods = {\n        at(index) {\n            return valueAt(target, index);\n        },\n        deleteAt(index, numDelete) {\n            if (typeof numDelete === \"number\") {\n                context.splice(objectId, index, numDelete);\n            }\n            else {\n                context.delete(objectId, index);\n            }\n            return this;\n        },\n        fill(val, start, end) {\n            const [value, datatype] = import_value(val, [...path, start], context);\n            const length = context.length(objectId);\n            start = parseListIndex(start || 0);\n            end = parseListIndex(end || length);\n            for (let i = start; i < Math.min(end, length); i++) {\n                if (datatype === \"list\" || datatype === \"map\") {\n                    context.putObject(objectId, i, value);\n                }\n                else if (datatype === \"text\") {\n                    context.putObject(objectId, i, value);\n                }\n                else {\n                    context.put(objectId, i, value, datatype);\n                }\n            }\n            return this;\n        },\n        indexOf(searchElement, start = 0) {\n            const length = context.length(objectId);\n            for (let i = start; i < length; i++) {\n                const valueWithType = context.getWithType(objectId, i);\n                if (!valueWithType) {\n                    continue;\n                }\n                const [valType, value] = valueWithType;\n                // Either the target element is an object, and we return if we have found\n                // the same object or it is a primitive value and we return if it matches\n                // the current value\n                const isObject = [\"map\", \"list\", \"text\"].includes(valType);\n                if (!isObject) {\n                    // If the element is not an object, then check if the value is equal to the target\n                    if (value === searchElement) {\n                        return i;\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                // if it's an object, but the type of the search element is a string, then we\n                // need to check if the object is a text object with the same value as the search element\n                if (valType === \"text\" && typeof searchElement === \"string\") {\n                    if (searchElement === valueAt(target, i)) {\n                        return i;\n                    }\n                }\n                // The only possible match now is if the searchElement is an object already in the\n                // automerge document with the same object ID as the value\n                if (searchElement[OBJECT_ID] === value) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n        insertAt(index, ...values) {\n            this.splice(index, 0, ...values);\n            return this;\n        },\n        pop() {\n            const length = context.length(objectId);\n            if (length == 0) {\n                return undefined;\n            }\n            const last = valueAt(target, length - 1);\n            context.delete(objectId, length - 1);\n            return last;\n        },\n        push(...values) {\n            const len = context.length(objectId);\n            this.splice(len, 0, ...values);\n            return context.length(objectId);\n        },\n        shift() {\n            if (context.length(objectId) == 0)\n                return;\n            const first = valueAt(target, 0);\n            context.delete(objectId, 0);\n            return first;\n        },\n        splice(index, del, ...vals) {\n            index = parseListIndex(index);\n            // if del is undefined, delete until the end of the list\n            if (typeof del !== \"number\") {\n                del = context.length(objectId) - index;\n            }\n            del = parseListIndex(del);\n            for (const val of vals) {\n                if (isSameDocument(val, context)) {\n                    throw new RangeError(\"Cannot create a reference to an existing document object\");\n                }\n            }\n            const result = [];\n            for (let i = 0; i < del; i++) {\n                const value = valueAt(target, index);\n                if (value !== undefined) {\n                    result.push(value);\n                }\n                context.delete(objectId, index);\n            }\n            const values = vals.map((val, index) => {\n                try {\n                    return import_value(val, [...path], context);\n                }\n                catch (e) {\n                    if (e instanceof RangeError) {\n                        throw new RangeError(`${e.message} (at index ${index} in the input)`);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            });\n            for (const [value, datatype] of values) {\n                switch (datatype) {\n                    case \"list\": {\n                        const list = context.insertObject(objectId, index, []);\n                        const proxyList = listProxy(context, list, [...path, index]);\n                        proxyList.splice(0, 0, ...value);\n                        break;\n                    }\n                    case \"text\": {\n                        context.insertObject(objectId, index, value);\n                        break;\n                    }\n                    case \"map\": {\n                        const map = context.insertObject(objectId, index, {});\n                        const proxyMap = mapProxy(context, map, [...path, index]);\n                        for (const key in value) {\n                            proxyMap[key] = value[key];\n                        }\n                        break;\n                    }\n                    default:\n                        context.insert(objectId, index, value, datatype);\n                }\n                index += 1;\n            }\n            return result;\n        },\n        unshift(...values) {\n            this.splice(0, 0, ...values);\n            return context.length(objectId);\n        },\n        entries() {\n            let i = 0;\n            const iterator = {\n                next: () => {\n                    const value = valueAt(target, i);\n                    if (value === undefined) {\n                        return { value: undefined, done: true };\n                    }\n                    else {\n                        return { value: [i++, value], done: false };\n                    }\n                },\n                [Symbol.iterator]() {\n                    return this;\n                },\n            };\n            return iterator;\n        },\n        keys() {\n            let i = 0;\n            const len = context.length(objectId);\n            const iterator = {\n                next: () => {\n                    if (i < len) {\n                        return { value: i++, done: false };\n                    }\n                    return { value: undefined, done: true };\n                },\n                [Symbol.iterator]() {\n                    return this;\n                },\n            };\n            return iterator;\n        },\n        values() {\n            let i = 0;\n            const iterator = {\n                next: () => {\n                    const value = valueAt(target, i++);\n                    if (value === undefined) {\n                        return { value: undefined, done: true };\n                    }\n                    else {\n                        return { value, done: false };\n                    }\n                },\n                [Symbol.iterator]() {\n                    return this;\n                },\n            };\n            return iterator;\n        },\n        toArray() {\n            const list = [];\n            let value;\n            do {\n                value = valueAt(target, list.length);\n                if (value !== undefined) {\n                    list.push(value);\n                }\n            } while (value !== undefined);\n            return list;\n        },\n        map(f) {\n            return this.toArray().map(f);\n        },\n        toString() {\n            return this.toArray().toString();\n        },\n        toLocaleString() {\n            return this.toArray().toLocaleString();\n        },\n        forEach(f) {\n            return this.toArray().forEach(f);\n        },\n        // todo: real concat function is different\n        concat(other) {\n            return this.toArray().concat(other);\n        },\n        every(f) {\n            return this.toArray().every(f);\n        },\n        filter(f) {\n            return this.toArray().filter(f);\n        },\n        find(f) {\n            let index = 0;\n            for (const v of this) {\n                if (f(v, index)) {\n                    return v;\n                }\n                index += 1;\n            }\n        },\n        findIndex(f) {\n            let index = 0;\n            for (const v of this) {\n                if (f(v, index)) {\n                    return index;\n                }\n                index += 1;\n            }\n            return -1;\n        },\n        includes(elem) {\n            return this.find(e => e === elem) !== undefined;\n        },\n        join(sep) {\n            return this.toArray().join(sep);\n        },\n        reduce(f, initialValue) {\n            return this.toArray().reduce(f, initialValue);\n        },\n        reduceRight(f, initialValue) {\n            return this.toArray().reduceRight(f, initialValue);\n        },\n        lastIndexOf(search, fromIndex = +Infinity) {\n            // this can be faster\n            return this.toArray().lastIndexOf(search, fromIndex);\n        },\n        slice(index, num) {\n            return this.toArray().slice(index, num);\n        },\n        some(f) {\n            let index = 0;\n            for (const v of this) {\n                if (f(v, index)) {\n                    return true;\n                }\n                index += 1;\n            }\n            return false;\n        },\n        [Symbol.iterator]: function* () {\n            let i = 0;\n            let value = valueAt(target, i);\n            while (value !== undefined) {\n                yield value;\n                i += 1;\n                value = valueAt(target, i);\n            }\n        },\n    };\n    return methods;\n}\nfunction textMethods(target) {\n    const { context, objectId } = target;\n    const methods = {\n        set(index, value) {\n            return (this[index] = value);\n        },\n        get(index) {\n            return this[index];\n        },\n        toString() {\n            return context.text(objectId).replace(/￼/g, \"\");\n        },\n        toSpans() {\n            const spans = [];\n            let chars = \"\";\n            const length = context.length(objectId);\n            for (let i = 0; i < length; i++) {\n                const value = this[i];\n                if (typeof value === \"string\") {\n                    chars += value;\n                }\n                else {\n                    if (chars.length > 0) {\n                        spans.push(chars);\n                        chars = \"\";\n                    }\n                    spans.push(value);\n                }\n            }\n            if (chars.length > 0) {\n                spans.push(chars);\n            }\n            return spans;\n        },\n        toJSON() {\n            return this.toString();\n        },\n        indexOf(o, start = 0) {\n            const text = context.text(objectId);\n            return text.indexOf(o, start);\n        },\n        insertAt(index, ...values) {\n            if (values.every(v => typeof v === \"string\")) {\n                context.splice(objectId, index, 0, values.join(\"\"));\n            }\n            else {\n                listMethods(target).insertAt(index, ...values);\n            }\n        },\n    };\n    return methods;\n}\nfunction printPath(path) {\n    // print the path as a json pointer\n    const jsonPointerComponents = path.map(component => {\n        // if its a number just turn it into a string\n        if (typeof component === \"number\") {\n            return component.toString();\n        }\n        else if (typeof component === \"string\") {\n            // otherwise we have to escape `/` and `~` characters\n            return component.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n        }\n    });\n    if (path.length === 0) {\n        return \"\";\n    }\n    else {\n        return \"/\" + jsonPointerComponents.join(\"/\");\n    }\n}\n/*\n * Check if an object is a {@link ImmutableString}\n */\nexport function isImmutableString(obj) {\n    // We used to determine whether something was a ImmutableString by doing an instanceof check, but\n    // this doesn't work if the automerge module is loaded twice somehow. Instead, use the presence\n    // of a symbol to determine if something is a ImmutableString\n    return (typeof obj === \"object\" &&\n        obj !== null &&\n        Object.prototype.hasOwnProperty.call(obj, IMMUTABLE_STRING));\n}\nexport function isCounter(obj) {\n    // We used to determine whether something was a Counter by doing an instanceof check, but\n    // this doesn't work if the automerge module is loaded twice somehow. Instead, use the presence\n    // of a symbol to determine if something is a Counter\n    return (typeof obj === \"object\" &&\n        obj !== null &&\n        Object.prototype.hasOwnProperty.call(obj, COUNTER));\n}\n", "// Convenience classes to allow users to strictly specify the number type they want\nimport { INT, UINT, F64 } from \"./constants.js\";\nexport class Int {\n    constructor(value) {\n        if (!(Number.isInteger(value) &&\n            value <= Number.MAX_SAFE_INTEGER &&\n            value >= Number.MIN_SAFE_INTEGER)) {\n            throw new RangeError(`Value ${value} cannot be a uint`);\n        }\n        this.value = value;\n        Reflect.defineProperty(this, INT, { value: true });\n        Object.freeze(this);\n    }\n}\nexport class Uint {\n    constructor(value) {\n        if (!(Number.isInteger(value) &&\n            value <= Number.MAX_SAFE_INTEGER &&\n            value >= 0)) {\n            throw new RangeError(`Value ${value} cannot be a uint`);\n        }\n        this.value = value;\n        Reflect.defineProperty(this, UINT, { value: true });\n        Object.freeze(this);\n    }\n}\nexport class Float64 {\n    constructor(value) {\n        if (typeof value !== \"number\") {\n            throw new RangeError(`Value ${value} cannot be a float64`);\n        }\n        this.value = value || 0.0;\n        Reflect.defineProperty(this, F64, { value: true });\n        Object.freeze(this);\n    }\n}\n", "import { CLEAR_CACHE, IS_PROXY, OBJECT_ID, STATE, TRACE } from \"./constants.js\";\nexport function _state(doc, checkroot = true) {\n    if (typeof doc !== \"object\") {\n        throw new RangeError(\"must be the document root\");\n    }\n    const state = Reflect.get(doc, STATE);\n    if (state === undefined ||\n        state == null ||\n        (checkroot && _obj(doc) !== \"_root\")) {\n        throw new RangeError(\"must be the document root\");\n    }\n    return state;\n}\nexport function _clear_cache(doc) {\n    Reflect.set(doc, CLEAR_CACHE, true);\n}\nexport function _trace(doc) {\n    return Reflect.get(doc, TRACE);\n}\nexport function _obj(doc) {\n    if (!(typeof doc === \"object\") || doc === null) {\n        return null;\n    }\n    return Reflect.get(doc, OBJECT_ID);\n}\nexport function _is_proxy(doc) {\n    return !!Reflect.get(doc, IS_PROXY);\n}\n", "import { isAutomerge, isCounter, mark, splice, unmark, } from \"./implementation.js\";\nexport function applyPatch(doc, patch) {\n    let path = resolvePath(doc, patch.path);\n    if (patch.action === \"put\") {\n        applyPutPatch(doc, path, patch);\n    }\n    else if (patch.action === \"insert\") {\n        applyInsertPatch(doc, path, patch);\n    }\n    else if (patch.action === \"del\") {\n        applyDelPatch(doc, path, patch);\n    }\n    else if (patch.action === \"splice\") {\n        applySplicePatch(doc, path, patch);\n    }\n    else if (patch.action === \"inc\") {\n        applyIncPatch(doc, path, patch);\n    }\n    else if (patch.action === \"mark\") {\n        applyMarkPatch(doc, path, patch);\n    }\n    else if (patch.action === \"unmark\") {\n        applyUnmarkPatch(doc, path, patch);\n    }\n    else if (patch.action === \"conflict\") {\n        // Ignore conflict patches\n    }\n    else {\n        throw new RangeError(`unsupported patch: ${patch}`);\n    }\n}\nfunction applyPutPatch(doc, path, patch) {\n    let { obj: parent, prop } = pathElemAt(path, -1);\n    parent[prop] = patch.value;\n}\nfunction applyInsertPatch(doc, path, patch) {\n    let { obj: parent, prop } = pathElemAt(path, -1);\n    if (!Array.isArray(parent)) {\n        throw new RangeError(`target is not an array for patch`);\n    }\n    if (!(typeof prop === \"number\")) {\n        throw new RangeError(`index is not a number for patch`);\n    }\n    parent.splice(prop, 0, ...patch.values);\n}\nfunction applyDelPatch(doc, path, patch) {\n    let { obj: parent, prop, parentPath } = pathElemAt(path, -1);\n    if (!(typeof prop === \"number\")) {\n        throw new RangeError(`index is not a number for patch`);\n    }\n    if (Array.isArray(parent)) {\n        parent.splice(prop, patch.length || 1);\n    }\n    else if (typeof parent === \"string\") {\n        if (isAutomerge(doc)) {\n            splice(doc, parentPath, prop, patch.length || 1);\n        }\n        else {\n            let { obj: grandParent, prop: grandParentProp } = pathElemAt(path, -2);\n            if (typeof prop !== \"number\") {\n                throw new RangeError(`index is not a number for patch`);\n            }\n            let target = grandParent[grandParentProp];\n            if (target == null || typeof target !== \"string\") {\n                throw new RangeError(`target is not a string for patch`);\n            }\n            let newString = target.slice(0, prop) + target.slice(prop + (patch.length || 1));\n            grandParent[grandParentProp] = newString;\n        }\n    }\n    else {\n        throw new RangeError(`target is not an array or string for patch`);\n    }\n}\nfunction applySplicePatch(doc, path, patch) {\n    if (isAutomerge(doc)) {\n        let { obj: parent, prop, parentPath } = pathElemAt(path, -1);\n        if (!(typeof prop === \"number\")) {\n            throw new RangeError(`index is not a number for patch`);\n        }\n        splice(doc, parentPath, prop, 0, patch.value);\n    }\n    else {\n        let { obj: parent, prop } = pathElemAt(path, -1);\n        let { obj: grandParent, prop: grandParentProp } = pathElemAt(path, -2);\n        if (typeof prop !== \"number\") {\n            throw new RangeError(`index is not a number for patch`);\n        }\n        let target = grandParent[grandParentProp];\n        if (target == null || typeof target !== \"string\") {\n            throw new RangeError(`target is not a string for patch`);\n        }\n        let newString = target.slice(0, prop) + patch.value + target.slice(prop);\n        grandParent[grandParentProp] = newString;\n    }\n}\nfunction applyIncPatch(doc, path, patch) {\n    let { obj: parent, prop } = pathElemAt(path, -1);\n    const counter = parent[prop];\n    if (isAutomerge(doc)) {\n        if (!isCounter(counter)) {\n            throw new RangeError(`target is not a counter for patch`);\n        }\n        counter.increment(patch.value);\n    }\n    else {\n        if (!(typeof counter === \"number\")) {\n            throw new RangeError(`target is not a number for patch`);\n        }\n        parent[prop] = counter + patch.value;\n    }\n}\nfunction applyMarkPatch(doc, path, patch) {\n    let { obj: parent, prop } = pathElemAt(path, -1);\n    if (!isAutomerge(doc)) {\n        return;\n    }\n    for (const markSpec of patch.marks) {\n        mark(doc, patch.path, \n        // TODO: add mark expansion to patches. This will require emitting\n        // the expand values in patches.\n        { start: markSpec.start, end: markSpec.end, expand: \"none\" }, markSpec.name, markSpec.value);\n    }\n}\nfunction applyUnmarkPatch(doc, path, patch) {\n    if (!isAutomerge(doc)) {\n        return;\n    }\n    unmark(doc, patch.path, { start: patch.start, end: patch.end, expand: \"none\" }, patch.name);\n}\nexport function applyPatches(doc, patches) {\n    for (const patch of patches) {\n        applyPatch(doc, patch);\n    }\n}\n/**\n * Walk through a path with an object and for each element in the path return a resolved path element.\n *\n * A resolved path element looks like this:\n *\n * ```typescript\n * {\n *   obj: any,           // The object that this element in the path is a property of\n *   prop: Prop,         // The property within `obj` that this path element points at\n *   parentPath: Prop[]  // The path to `obj` within the original `doc` passed to `resolvePath`\n * }\n * ````\n *\n * For example, given an object like this:\n *\n * ```typescript\n * {\n *      todos: [{ task: \"remember the milk\"}]\n * }\n * ```\n *\n * Then `resolvePath(doc, [\"todos\", 0, \"task\"])` would return:\n *\n * ```typescript\n * [\n *   { obj: { todos: [{ task: \"remember the milk\"}] }, prop: \"todos\", parentPath: [] },\n *   { obj: [{ task: \"remember the milk\"}], prop: 0, parentPath: [\"todos\"] },\n *   { obj: { task: \"remember the milk\" }, prop: \"task\", parentPath: [\"todos\", 0] }\n * ]\n * ```\n */\nfunction resolvePath(doc, path) {\n    const result = [];\n    let current = doc;\n    let currentPath = [];\n    for (const [index, prop] of path.entries()) {\n        result.push({ obj: current, prop, parentPath: currentPath.slice() });\n        currentPath.push(prop);\n        if (index !== path.length - 1) {\n            if (current == null || typeof current != \"object\") {\n                // If we're not the last item in the path then we need the current\n                // object to be an object so we can access it in the next iteration\n                throw new Error(`Invalid path: ${path}`);\n            }\n            current = current[prop];\n        }\n        else {\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Get an element from a resolved path, throwing an exception if the element does not exist\n *\n * @param resolved - The path to lookup in\n * @param index    - The index of the element to lookup, negative indices search backwards\n */\nfunction pathElemAt(resolved, index) {\n    let result = resolved.at(index);\n    if (result == undefined) {\n        throw new Error(\"invalid path\");\n    }\n    return result;\n}\nfunction reversed(array) {\n    return array.slice().reverse();\n}\n", "import { Counter } from \"./types.js\";\nimport { mapProxy, listProxy } from \"./proxies.js\";\n/**\n * The conflicting values at a particular property in an object\n *\n * The return value of this function is a map. The values of the map are the\n * conflicting values and the keys are the op IDs which set those values. Most of\n * the time all you care about is the values.\n *\n * One important note is that the return type of this function differs based on\n * whether we are inside a change callback or not. Inside a change callback we\n * return proxies, just like anywhere else in the document. This allows the user to\n * make changes inside a conflicted value without being forced to first resolve the\n * conflict. Outside of a change callback we return frozen POJOs.\n *\n * @param context The underlying automerge-wasm document\n * @param objectId The object ID within which we are looking up conflicts\n * @param prop The property inside the object which we are looking up conflicts for\n * @param withinChangeCallback Whether we are inside a currently running change callback\n *\n * @returns A map from op ID to the value for that op ID\n */\nexport function conflictAt(context, objectId, prop, withinChangeCallback) {\n    const values = context.getAll(objectId, prop);\n    if (values.length <= 1) {\n        return;\n    }\n    const result = {};\n    for (const fullVal of values) {\n        switch (fullVal[0]) {\n            case \"map\":\n                if (withinChangeCallback) {\n                    result[fullVal[1]] = mapProxy(context, fullVal[1], [prop]);\n                }\n                else {\n                    result[fullVal[1]] = reifyFullValue(context, [fullVal[0], fullVal[1]]);\n                }\n                break;\n            case \"list\":\n                if (withinChangeCallback) {\n                    result[fullVal[1]] = listProxy(context, fullVal[1], [prop]);\n                }\n                else {\n                    result[fullVal[1]] = reifyFullValue(context, [fullVal[0], fullVal[1]]);\n                }\n                break;\n            case \"text\":\n                result[fullVal[1]] = context.text(fullVal[1]);\n                break;\n            case \"str\":\n            case \"uint\":\n            case \"int\":\n            case \"f64\":\n            case \"boolean\":\n            case \"bytes\":\n            case \"null\":\n                result[fullVal[2]] = fullVal[1];\n                break;\n            case \"counter\":\n                result[fullVal[2]] = new Counter(fullVal[1]);\n                break;\n            case \"timestamp\":\n                result[fullVal[2]] = new Date(fullVal[1]);\n                break;\n            default:\n                throw RangeError(`datatype ${fullVal[0]} unimplemented`);\n        }\n    }\n    return result;\n}\nfunction reifyFullValue(context, fullValue) {\n    switch (fullValue[0]) {\n        case \"map\":\n            const mapResult = {};\n            for (const key of context.keys(fullValue[1])) {\n                let subVal = context.getWithType(fullValue[1], key);\n                if (!subVal) {\n                    throw new Error(\"unexpected null map value\");\n                }\n                mapResult[key] = reifyFullValue(context, subVal);\n            }\n            return Object.freeze(mapResult);\n        case \"list\":\n            const listResult = [];\n            const length = context.length(fullValue[1]);\n            for (let i = 0; i < length; i++) {\n                let subVal = context.getWithType(fullValue[1], i);\n                if (!subVal) {\n                    throw new Error(\"unexpected null list element\");\n                }\n                listResult.push(reifyFullValue(context, subVal));\n            }\n            return Object.freeze(listResult);\n        case \"text\":\n            return context.text(fullValue[1]);\n        case \"str\":\n        case \"uint\":\n        case \"int\":\n        case \"f64\":\n        case \"boolean\":\n        case \"bytes\":\n        case \"null\":\n            return fullValue[1];\n        case \"counter\":\n            return new Counter(fullValue[1]);\n        case \"timestamp\":\n            return new Date(fullValue[1]);\n        default:\n            throw RangeError(`datatype ${fullValue[0]} unimplemented`);\n    }\n}\n", "import { UseApi } from \"../low_level.js\";\nimport * as api from \"../wasm_bindgen_output/bundler/automerge_wasm.js\";\nUseApi(api);\nexport * from \"../index.js\";\n"],
  "mappings": "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",
  "names": ["view", "ptr", "change", "block", "change", "automerge_wasm_exports", "Automerge", "SyncState", "create", "decodeChange", "decodeSyncMessage", "decodeSyncState", "encodeChange", "encodeSyncMessage", "encodeSyncState", "exportSyncState", "importSyncState", "initSyncState", "load", "readBundle", "wasm", "wasm", "cachedUint8ArrayMemory0", "getUint8ArrayMemory0", "cachedTextDecoder", "MAX_SAFARI_DECODE_BYTES", "numBytesDecoded", "decodeText", "getStringFromWasm0", "WASM_VECTOR_LEN", "cachedTextEncoder", "view", "passStringToWasm0", "ptr", "cachedDataViewMemory0", "getDataViewMemory0", "addToExternrefTable0", "handleError", "getArrayU8FromWasm0", "isLikeNone", "debugString", "takeFromExternrefTable0", "_assertClass", "create", "Automerge", "load", "encodeChange", "change", "decodeChange", "initSyncState", "SyncState", "importSyncState", "exportSyncState", "encodeSyncMessage", "decodeSyncMessage", "encodeSyncState", "decodeSyncState", "readBundle", "AutomergeFinalization", "block", "SyncStateFinalization", "getStringFromWasm0", "passStringToWasm0", "wasm", "WASM_VECTOR_LEN", "getDataViewMemory0", "handleError", "handleError", "handleError", "handleError", "getStringFromWasm0", "wasm", "getStringFromWasm0", "handleError", "getArrayU8FromWasm0", "handleError", "getStringFromWasm0", "getStringFromWasm0", "getArrayU8FromWasm0", "handleError", "handleError", "getArrayU8FromWasm0", "handleError", "passStringToWasm0", "wasm", "WASM_VECTOR_LEN", "getDataViewMemory0", "isLikeNone", "passStringToWasm0", "wasm", "WASM_VECTOR_LEN", "getDataViewMemory0", "passStringToWasm0", "wasm", "WASM_VECTOR_LEN", "getDataViewMemory0", "handleError", "isLikeNone", "debugString", "passStringToWasm0", "wasm", "WASM_VECTOR_LEN", "getDataViewMemory0", "getDataViewMemory0", "isLikeNone", "isLikeNone", "passStringToWasm0", "wasm", "WASM_VECTOR_LEN", "getDataViewMemory0", "getStringFromWasm0", "getStringFromWasm0", "wasm", "wasm", "decodeChange", "decodeSyncMessage", "decodeSyncState", "encodeChange", "encodeSyncMessage", "encodeSyncState", "initSyncState", "load", "readBundle", "key", "isObject", "index", "load", "change", "decodeChange", "encodeSyncState", "decodeSyncState", "initSyncState", "encodeChange", "encodeSyncMessage", "decodeSyncMessage", "block", "readBundle", "automerge_wasm_exports"]
}
